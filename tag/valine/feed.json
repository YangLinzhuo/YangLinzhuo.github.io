{
    "version": "https://jsonfeed.org/version/1",
    "title": "林•初夏 • All posts by \"valine\" tag",
    "description": "",
    "home_page_url": "https://linn-ylz.com",
    "items": [
        {
            "id": "https://linn-ylz.com/Hexo/transfer-waline/",
            "url": "https://linn-ylz.com/Hexo/transfer-waline/",
            "title": "从 Valine 迁移到 Waline",
            "date_published": "2022-07-24T07:09:21.000Z",
            "content_html": "<div class=\"note info\">\n<p>2022-12-02 更新<br>\n根据评论区小伙伴 @<a href=\"https://maredevi.fun/\">MareDevi</a> 的介绍，成功解决了文章浏览量显示的问题，撒花！🌸</p>\n</div>\n<div class=\"note warning\">\n<p><s>想来想去，很多问题还是没有解决，主要还是  <code>Waline</code>  与博客主题不完全兼容，加上自己对前端也不是很了解，最后还是改了回去。真是太折腾了。流石程序员。</s></p>\n</div>\n<h1 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>由于  <code>Valine</code>  评论系统的通知问题以及其他原因，考虑更换  <code>Waline</code>  作为新的评论系统，但是原来的  <code>Shoka</code>  主题使用的是作者修改后的  <code>MiniValine</code>  系统，在修改上碰到了很大的麻烦，<s>最后只能忍痛割爱更换了现在的  <code>butterfly</code>  主题。这次更换也是对博客进行了一个大刀阔斧的修改，但是也摆脱了  <code>Valine</code>  系统这个累赘。原来经常有评论无法及时提醒，而我自己有时候又不会经常上网站查看，因此有的消息过了很久才能发现。最后还是下定决心进行迁移。</s></p>\n<p>经过查找，发现了一个小姐姐提供的修改方法<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>，在  <code>Shoka</code>  中能够引入  <code>Waline</code>  。最后还是保留了  <code>Shoka</code>  主题，然后将评论系统换成了  <code>Waline</code>  的系统，虽然还有一些兼容性上的问题，但总归还算保住了现在这个好看的主题。有些小问题折腾了几天也没能完全解决，姑且就到此为止吧。关于遇到的问题，在文章最后一小节有补充。</p>\n<h1 id=\"域名注册\"><a class=\"markdownIt-Anchor\" href=\"#域名注册\">#</a> 域名注册</h1>\n<p>这次顺便更换了一个自己的域名。经过一番搜索后选择了 <a href=\"https://www.dynadot.com/\">Dynadot</a> 域名商，域名就是现在的  <code>linn-ylz.com</code> 。依照教程<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>购买域名，全部完成之后，使用  <code>Cloudflare</code>  的  <code>DNS</code>  服务，参考另一个教程<sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>。</p>\n<p>以上的步骤按照教程基本能够比较轻松地完成，不多赘述。</p>\n<h2 id=\"自定义域名\"><a class=\"markdownIt-Anchor\" href=\"#自定义域名\">#</a> 自定义域名</h2>\n<p>在  <code>Vercel</code>  中设置自定义域名需要和  <code>Cloudflare</code>  的配置相匹配，具体可以参考这篇<a href=\"https://tangly1024.com/article/vercel-domain\">教程</a>。需要注意，在  <code>Cloudflare</code>  中，需要将  <code>SSL/TLS</code>  的加密模式设置为完全（Full），否则可能会遇到 “重定向过多” 的错误而无法访问。</p>\n<h1 id=\"更换-waline\"><a class=\"markdownIt-Anchor\" href=\"#更换-waline\">#</a> 更换 Waline</h1>\n<p>按照  <code>Waline</code>  的<a href=\"https://waline.js.org/guide/get-started.html\">教程</a>进行配置。</p>\n<h2 id=\"leancloud-设置\"><a class=\"markdownIt-Anchor\" href=\"#leancloud-设置\">#</a> LeanCloud 设置</h2>\n<p>因为之前已经注册配置过  <code>LeanCloud</code>  了，所以这里不再赘述。可以参考之前的文章<a href=\"/Hexo/blog-comment-push/\" title=\"Shoka 评论推送功能实现\">Shoka 评论推送功能实现</a>。</p>\n<h2 id=\"vercel-配置\"><a class=\"markdownIt-Anchor\" href=\"#vercel-配置\">#</a> Vercel 配置</h2>\n<p>注册  <code>Vercel</code>  完成之后，按照  <code>Waline</code>  的官方教程进行配置。我在这里碰到了一点问题，从  <code>Waline</code>  的入口进入  <code>Vercel</code>  之后，在选择  <code>GitHub</code>  仓库的时无法填写表格，因此无法直接进行 deploy。但是直接选择自己的仓库却又可以。最后只能采用曲线救国的方法，自己 Fork 了仓库，然后再从自己的仓库中进行选择。然而直接 deploy 仓库会报错  <code>This Serverless Function has crashed</code> ，据官方说法，只需要复制  <code>example</code>  文件夹下的内容即可<sup class=\"footnote-ref\"><a href=\"#fn4\" id=\"fnref4\">[4]</a></sup>。</p>\n<p>在  <code>Vercel</code>  的  <code>Settings</code>  中，选择  <code>Environment Variables</code>  添加环境变量，主要是  <code>LEAN_ID</code> ， <code>LEAN_KEY</code> ， <code>LEAN_MASTER_KEY</code>  三个值。</p>\n<div class=\"note info\">\n<p>如果是使用的国内版的  <code>LeanCloud</code> ，还需要额外设置  <code>LEAN_SERVER</code>  变量。</p>\n</div>\n<h3 id=\"添加自定义域名\"><a class=\"markdownIt-Anchor\" href=\"#添加自定义域名\">#</a> 添加自定义域名</h3>\n<p>参照  <code>Waline</code>  教程中的内容，在  <code>Settings</code>  中选择  <code>Domain</code>  进入域名配置页。教程的说明进行配置。</p>\n<p>关于在域名服务器商处添加新的  <code>CNAME</code>  解析记录这一条，由于我是在  <code>Cloudflare</code>  注册的  <code>DNS</code>  服务，因此需要在其中进行配置。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">CNAME</td>\n<td style=\"text-align:left\">example</td>\n<td style=\"text-align:left\"><a href=\"http://cname.vercel-dns.com\">cname.vercel-dns.com</a></td>\n</tr>\n</tbody>\n</table>\n<table>\n<caption id=\"\" style=\"caption-side: bottom\">域名配置参数表</caption>\n<thead>\n<tr>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">CNAME</td>\n<td style=\"text-align:left\">example</td>\n<td style=\"text-align:left\"><a href=\"http://cname.vercel-dns.com\">cname.vercel-dns.com</a></td>\n</tr>\n</tbody>\n</table>\n<p>按我自己的例子，我的域名是  <code>linn-ylz.com</code> ，我选择的用于  <code>Waline</code>  的域名是  <code>comments.linn-ylz.com</code> ，那么在  <code>Cloudflare</code>  配置中添加  <code>CNAME</code>  配置，名称输入  <code>comments</code> ，对应的值为  <code>cname.vercel-dns.com</code> 。</p>\n<p><img loading=\"lazy\" data-src=\"/images/transfer-waline/vercel-cloudflare-config.png\" alt=\"Cloudflare 域名配置\"></p>\n<p>上述配置完成之后可以从  <code>Vercel</code>  中打开网页进行评论测试。</p>\n<h1 id=\"邮件通知配置\"><a class=\"markdownIt-Anchor\" href=\"#邮件通知配置\">#</a> 邮件通知配置</h1>\n<p>这一部分主要参考  <code>Waline</code>  中的<a href=\"https://waline.js.org/guide/server/notification.html\">评论通知</a>教程内容。我选择的是其中的邮件通知服务。教程中列举了以下必须配置的内容：</p>\n<ul>\n<li><code>SMTP_SERVICE</code> : SMTP 邮件发送服务提供商。</li>\n<li><code>SMTP_USER</code> : SMTP 邮件发送服务的用户名，一般为登录邮箱。</li>\n<li><code>SMTP_PASS</code> : SMTP 邮件发送服务的密码，一般为邮箱登录密码，部分邮箱 (例如 163) 是单独的 SMTP 密码。</li>\n<li><code>SITE_NAME</code> : 网站名称，用于在消息中显示。</li>\n<li><code>SITE_URL</code> : 网站地址，用于在消息中显示。</li>\n<li><code>AUTHOR_EMAIL</code> : 博主邮箱，用来接收新评论通知。如果是博主发布的评论则不进行提醒通知。</li>\n</ul>\n<p>以上变量均在  <code>Vercel</code>  中的环境变量设置中添加。由于官方文档惜字如金，所以这里再详细说一下配置的细节。</p>\n<p><code>SMTP_SERVICE</code> 、 <code>SMTP_USER</code> 、 <code>SMTP_PASS</code>  这三项内容是对应发送通知邮件的邮箱。比如我有两个邮箱，一个是 QQ 邮箱，另一个是 Outlook 邮箱，我选择用 QQ 邮箱发送消息到我的 Outlook 邮箱，通知有评论相关的内容到达。那么以上三项内容便需要填写 QQ 邮箱相关的信息。比如 QQ 邮箱的  <code>SMTP_SERVICE</code>  是  <code>QQ</code> ， <code>SMTP_USER</code>  即对应 QQ 邮箱，如  <code>123456789@qq.com</code> 。而  <code>SMTP_PASS</code>  并不是 QQ 邮箱的密码，需要在 QQ 邮箱的 <code>设置</code> 中，找到  <code>账户</code>  选项卡，在  <code>POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV服务</code>  一栏有一个提示，最后有一个生成授权码的可点击链接，点击它之后，会要求你向某个号码发送一条指定内容的短信，发送完成之后会弹窗提示你一个授权码，这个授权码即填写到  <code>SMTP_PASS</code>  中的内容。</p>\n<p><code>SITE_NAME</code>  是消息中显示的网站名称， <code>SITE_URL</code>  则是网站的地址。注意这里填写的地址要包含前面的协议部分，以我自己为例就是  <code>https://linn-ylz.com</code> 。<sup class=\"footnote-ref\"><a href=\"#fn5\" id=\"fnref5\">[5]</a></sup></p>\n<p><code>AUTHOR_EMAIL</code>  就是用于接收评论通知的邮箱。</p>\n<p>以上内容如果均配置正确，那么应该能够正常接收通知了。</p>\n<h1 id=\"修复-leancloud-数据库格式问题\"><a class=\"markdownIt-Anchor\" href=\"#修复-leancloud-数据库格式问题\">#</a> 修复 LeanCloud 数据库格式问题</h1>\n<p>尽管  <code>Waline</code>  也支持  <code>LeanCloud</code> ，但是在读取其中的内容时，因为数据库表格键值的不匹配会在显示上出现一些问题，这点可能和我之前使用的是  <code>MiniValine</code>  有关。</p>\n<h2 id=\"阅读量\"><a class=\"markdownIt-Anchor\" href=\"#阅读量\">#</a> 阅读量</h2>\n<p>首先是阅读量的问题，在  <code>LeanCloud</code>  原来的内容中，存储了之前的网页的访问数量。但是转到  <code>Waline</code>  之后数值却从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> 开始计算了。在  <code>LeanCloud</code>  后台，也发现和原来的文章不算同一个数据列。经过一番排查没有找到很好的解决办法，因此只能把之前的计数值复制到新的数据项之中，因为文章数量不多，操作起来倒也没费太多时间。</p>\n<h2 id=\"评论\"><a class=\"markdownIt-Anchor\" href=\"#评论\">#</a> 评论</h2>\n<p>在  <code>Vercel</code>  搭建好之后，进入  <code>Waline</code>  的管理平台，发现虽然评论能够正常读取，但是评论的时间显示却存在问题，经排查， <code>Waline</code>  使用的是  <code>insertedAt</code>  列的数据作为评论的发表时间，而之前的数据则是直接使用的  <code>createdAt</code>  列的数据，因此  <code>Waline</code>  读取不到之前评论的发表时间，这里把  <code>createdAt</code>  列的内容复制到  <code>insertedAt</code>  列之后可以正常显示时间了。</p>\n<p>另一个问题是在文章的底部没有显示对应的评论，经排查，是因为之前的评论系统使用的路径是  <code>A/B/</code>  这样的格式，而  <code>Waline</code>  使用的是  <code>/A/B</code>  的格式，相差了一个  <code>/</code>  符号，修正过后，评论能够在文章底部正常显示。</p>\n<h1 id=\"网站访问量\"><a class=\"markdownIt-Anchor\" href=\"#网站访问量\">#</a> 网站访问量</h1>\n<p>网站的访客数量统计使用的是 “不蒜子”，但是其无法进行初始化，因此已经搭建好一段时间的网站的数值便不准确，这里参考<a href=\"https://juejin.cn/post/7035570281414393864\">这篇文章</a>的办法，在主题文件中修改  <code>card_webinfo.pug</code>  文件，在其中添加以下内容：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>script<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">function</span> <span class=\"token function\">checkPv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">var</span> init_pv <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">&#123;</span>theme<span class=\"token punctuation\">.</span>busuanzi<span class=\"token punctuation\">.</span>init_pv<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">var</span> pv <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"busuanzi_value_site_pv\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pv<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">===</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>checkPv<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                pv<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>pv<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> init_pv</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    script <span class=\"token function\">checkPv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    script<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">function</span> <span class=\"token function\">checkUv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">var</span> init_uv <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">&#123;</span>theme<span class=\"token punctuation\">.</span>busuanzi<span class=\"token punctuation\">.</span>init_uv<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">var</span> uv <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"busuanzi_value_site_uv\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">===</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>checkUv<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                uv<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> init_uv</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    script <span class=\"token function\">checkUv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"在-shoka-中使用-waline\"><a class=\"markdownIt-Anchor\" href=\"#在-shoka-中使用-waline\">#</a> 在 Shoka 中使用 Waline</h1>\n<p>如文章开头所述，使用了一个小姐姐提供的方法<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1:1\">[1:1]</a></sup>，成功将评论系统更换为了  <code>Waline</code> 。虽然如此，但是还存在一些问题。</p>\n<p>首先是和  <code>MiniValine</code>  的冲突问题，原来博客中的最近评论和文章浏览量统计是通过  <code>MiniValine</code>  的功能实现的，更换为  <code>Waline</code>  之后便失效了。虽然  <code>Waline</code>  也有提供这些功能，但是由于本人对于前端实在是苦手，因此最后也只是解决了最近评论的问题。文章浏览量统计在很多时候还是不能正常显示，只有通过刷新网页才能够正常显示，最后还是妥协成现在这个状况了。</p>\n<h2 id=\"最近评论问题\"><a class=\"markdownIt-Anchor\" href=\"#最近评论问题\">#</a> 最近评论问题</h2>\n<p>对于最近评论，我采用的办法是在网页 DOM 结构树生成完成之后，通过  <code>Waline</code>  的 API 接口进行查询，然后输出到网页中。这里的代码参考的是刚才提到的小姐姐的  <code>GitHub</code>  中的相关文件<sup class=\"footnote-ref\"><a href=\"#fn6\" id=\"fnref6\">[6]</a></sup>。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getRecentComments</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getRecentComments triggered.\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>waline<span class=\"token punctuation\">.</span>serverURL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".waline-recent-comments\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">renderTime</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">date</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">let</span> myDate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>myDate<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> <span class=\"token number\">3600</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">T</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.[\\d]&#123;3&#125;Z</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">formatTime</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">let</span> d <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">let</span> h <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">let</span> m <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">let</span> s <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">/</span> <span class=\"token number\">1000</span> <span class=\"token operator\">%</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">return</span> d <span class=\"token operator\">+</span> <span class=\"token string\">' 天前'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> h <span class=\"token operator\">+</span> <span class=\"token string\">' 小时前'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">return</span> m <span class=\"token operator\">+</span> <span class=\"token string\">' 分钟前'</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">return</span> s <span class=\"token operator\">+</span> <span class=\"token string\">' 秒钟前'</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">' @ '</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">let</span> reg <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;.*?></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">ig</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">let</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">let</span> url <span class=\"token operator\">=</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>waline<span class=\"token punctuation\">.</span>serverURL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".waline-recent-comments\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>t<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loaded\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load recent comments\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">'/comment?type=recent&amp;count='</span><span class=\"token operator\">+</span>count<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>pid <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total \"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\" comments\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> o <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">;</span> o<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token keyword\">let</span> comment <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>comment<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token keyword\">let</span> gap <span class=\"token operator\">=</span> <span class=\"token function\">formatTime</span><span class=\"token punctuation\">(</span>date <span class=\"token operator\">-</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token function\">renderTime</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>createdAt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                r <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li class=\"item\">&lt;a href=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>arr<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>url <span class=\"token operator\">+</span> <span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> arr<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>objectId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\"></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                    &lt;span class=\"breadcrumb\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>arr<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nick <span class=\"token operator\">+</span> str <span class=\"token operator\">+</span> gap<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                    &lt;span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>comment<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/span>&lt;/a>&lt;/li></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                t<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                t<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loaded\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token comment\">// e.config.pjax &amp;&amp; e.config.pjax.refresh(t)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上述内容我添加在  <code>source/js/_app/pjax.js</code>  文件中，直接添加在最底部即可。上述函数添加后，再添加一个事件监听器：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DOMContentLoaded'</span><span class=\"token punctuation\">,</span> getRecentComments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>该监听器表示在 DOM 资源生成完毕之后，执行该函数进行查询。</p>\n<h2 id=\"文章浏览量统计\"><a class=\"markdownIt-Anchor\" href=\"#文章浏览量统计\">#</a> 文章浏览量统计</h2>\n<p>文章浏览量统计和最近评论的解决思路类似，也是在 DOM 结构树生成完毕之后，进行查询。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getPageView</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getPageView triggered.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>waline<span class=\"token punctuation\">.</span>serverURL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".leancloud-visitors-count\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">let</span> path <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">let</span> url <span class=\"token operator\">=</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>waline<span class=\"token punctuation\">.</span>serverURL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Load page views\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Current page path: \"</span> <span class=\"token operator\">+</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">let</span> https <span class=\"token operator\">=</span> url<span class=\"token operator\">+</span><span class=\"token string\">'/article?path='</span><span class=\"token operator\">+</span>path<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>https<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pageview: \"</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          t<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DOMContentLoaded'</span><span class=\"token punctuation\">,</span> getPageView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>除此之外，还需要修改  <code>layout/_partials/post/footer.njk</code>  这一文件中的内容。首先把  <code>if theme.valine.appId and theme.valine.appKey and theme.valine.visitor</code>  这一语句修改成  <code>if theme.waline.serverURL</code> ，否则在没有  <code>Valine</code>  配置的情况下，文章浏览量的元素不会显示。然后把  <code>&lt;span id=&quot;&#123;&#123; page.path | replace('index.html', '') &#125;&#125;&quot;...&quot;&gt;</code>  这个标签中的内容修改掉，比如我修改成了  <code>&lt;span class=&quot;item&quot;&gt;</code> 。这里之所以把  <code>&lt;span&gt;</code>  标签中的内容修改掉是因为我发现如果保留该标签，该数值一直是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>，应该是会被某个脚本执行的内容覆盖掉。具体原理还不明确。</p>\n<p>但是这个方法存在的问题是，除非刷新网页，否则浏览数据不会正常显示。</p>\n<p>尽管花了很多时间尝试别的方法，但是最后还是没有彻底解决。如果有哪位前端大佬能够不吝赐教，感激不尽。</p>\n<h2 id=\"评论系统样式问题\"><a class=\"markdownIt-Anchor\" href=\"#评论系统样式问题\">#</a> 评论系统样式问题</h2>\n<p>由于  <code>Waline</code>  系统的默认样式和  <code>Shoka</code>  不是非常搭配，因此仍然参考小姐姐的教程<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1:2\">[1:2]</a></sup>进行了配置，但是发现并没有生效。经过排查是因为原来主题中存在的  <code>MiniValine</code>  相关的样式覆盖了配置的样式。最好把相关的  <code>MiniValine</code>  的内容全部注释掉。</p>\n<h1 id=\"终\"><a class=\"markdownIt-Anchor\" href=\"#终\">#</a> 终</h1>\n<p>花了几天总算是把博客主题折腾好了。虽然花了不少功夫，<s>还额外给网页增加了几十次浏览量。</s> 还有些问题没有完全解决，但是能够保住这个主题还是很高兴的。<s>只要能保住太原，他要多少我给多少！</s></p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://ry.mk/2022/03/06/zai-shoka-zhong-tian-zeng-waline-ping-lun-xi-tong-bing-zi-ding-yi-yang-shi\">在 Shoka 中添增 Waline 评论系统并自定义样式</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a> <a href=\"#fnref1:1\" class=\"footnote-backref\">↩︎</a> <a href=\"#fnref1:2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p><a href=\"https://oldtang.com/2420.html#%E4%B8%89%E3%80%81%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E5%B9%B6%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D\">Dynadot 网站注册账户、购买域名、支付宝付款、解析域名教程</a> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p><a href=\"https://www.bandwagonhost.net/5986.html\">使用 Cloudflare 免费 DNS 服务器解析域名到搬瓦工 VPS 主机建站教程</a> <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn4\" class=\"footnote-item\"><p><a href=\"https://github.com/walinejs/waline/discussions/1098\">Vercel 重新部署后 Serverless Function has crashed</a> <a href=\"#fnref4\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn5\" class=\"footnote-item\"><p><a href=\"https://github.com/walinejs/waline/issues/480\">[BUG] 配置邮件通知成功后，无法定位到评论所在的具体文章</a> <a href=\"#fnref5\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn6\" class=\"footnote-item\"><p><a href=\"https://github.com/WakabaYu/WakabaYu.github.io/blob/master/js/rcomment.js\">最近评论获取</a> <a href=\"#fnref6\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "Hexo",
                "Valine",
                "Waline"
            ]
        }
    ]
}