{
    "version": "https://jsonfeed.org/version/1",
    "title": "林•初夏",
    "description": "",
    "home_page_url": "https://linn-ylz.com",
    "items": [
        {
            "id": "https://linn-ylz.com/Computer-Science/Algorithm/binary-search-revision/",
            "url": "https://linn-ylz.com/Computer-Science/Algorithm/binary-search-revision/",
            "title": "二分搜索再探",
            "date_published": "2023-10-21T01:58:50.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>经典的二分查找写法，相信许多人都动手写过，但是在编写代码的过程中，经常遇到类似这样的问题：</p>\n<ul>\n<li>如何确定起始端点下标 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 的位置？是写成闭区间还是开区间？</li>\n<li>如何确定循环结束条件？是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>&lt;</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L &lt; R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 还是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>≤</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L\\le R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> ？</li>\n<li>如果确定下标的变化方式？是直接赋值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 给 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>，还是需要 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">+</span><span class=\"mord\">1</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span> ？</li>\n<li>最后返回 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 还是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> ？还是其他形式？</li>\n</ul>\n<p>二分查找代码虽然只有短短数行，但是这些问题让编写正确的代码显得非常棘手。在之前的文章<a href=\"/Computer-Science/Algorithm/about-binary-search/\" title=\"二分搜索探究\">《二分搜索探究》</a>中我曾经编写过当时的心得体会。最近在复习的时候，对照 B 站 Up 主<a href=\"https://space.bilibili.com/206214\">灵茶山艾府</a>的视频，加上评论区其他观众的回复讨论，又有了更新的感悟，因此在此记录下来。</p>\n<p>为了方便讨论，我们定义一个二分查找函数的功能如下：</p>\n<ul>\n<li>返回有序数组  <code>arr</code>  中目标值  <code>target</code>  对应的下标</li>\n<li>如果  <code>arr</code>  不存在  <code>target</code>  值，则返回第一个大于  <code>target</code>  的值的下标</li>\n</ul>\n<p>总结而言，就是返回数组  <code>arr</code>  第一个大于等于  <code>target</code>  的值的下标。</p>\n<p>对照开头提出的三个问题，我们一个一个来思考解决的办法。</p>\n<h2 id=\"区间的确定\"><a class=\"markdownIt-Anchor\" href=\"#区间的确定\">#</a> 区间的确定</h2>\n<p>我们在编写二分查找代码的时候，第一个问题在于如何确定起始端点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 的数值。事实上，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 的选取决定了我们使用何种区间表示来解决后续的代码。</p>\n<p>我们当前有两个端点，每个端点可以开，可以闭，则总共有四种形式：</p>\n<ul>\n<li>闭区间（左闭右闭）</li>\n<li>开区间（左开右开）</li>\n<li>左闭右开</li>\n<li>左开右闭</li>\n</ul>\n<p>理论上，基于这四种形式，我们都可以编写出正确的二分查找代码。但是采用不同形式编写出的代码可能在形式上具有某种区别，对于某些更复杂的问题，在编写代码的难易度上也有差别。像  <code>Python</code>   <code>C++</code>  等语言，选择的就是左闭右开的方式，而  <code>Java</code>  则采用的闭区间的写法。我个人是偏向左闭右开写法的。</p>\n<p>接下来我们一个个查看每种表示形式。</p>\n<p>闭区间，即表示我们每次处理的是下标范围在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L, R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 中的元素。这里我们需要注意，这里的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L, R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 区间中的元素是我们代码后续需要处理的对象，也就是说这些元素还尚未明确与目标值  <code>target</code>  的关系。而与此相反，区间外的元素 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(-\\infty, L-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>R</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[R+1,+\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span> 则已经确定了与目标值  <code>target</code>  的关系，也因此我们能够将其排除。这里 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">-\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">∞</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">+\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span></span></span></span> 分别表示任意下标小于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> 或者大于数组长度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 的情况。这些数组外的元素我们可以认为其为无穷小或者无穷大（保证有序）。</p>\n<p>这也是我从某个评论中获得的灵感，即思考区间问题时，<strong>我们关注的不是区间内的元素具有何种性质，而是区间外的元素具有何种性质</strong>。二分查找的本质就是，根据某种性质，一步步排除掉一半的元素，不断缩小查找范围，直到找到对应的元素，或者确认目标元素不存在。</p>\n<p>那么对应闭区间，我们可以确定以下性质：</p>\n<ul>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L, R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 中的元素是待查找对象</li>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(-\\infty, L-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> 中的元素均<strong>小于</strong>目标值  <code>target</code></li>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>R</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[R+1, +\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span> 中的元素均<strong>大于或等于</strong>目标值  <code>target</code></li>\n</ul>\n<p>小于和大于的关系相信很容易想到，那么这里如何确定是否带 “等于” 的关系呢？我们可以这样思考，下标区间<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L, R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 是我们的待查找区间，对于左边被排除的下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(-\\infty, L-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>，如果其中可能存在<strong>等于</strong>  <code>target</code>  的值，那么返回的下标必然应该在此区间内，我们不可能将其排除在我们的搜索范围之外，因此这里不能取等于。而对于右边被排除的下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>R</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[R+1,+\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span>，因为数组  <code>arr</code>  中可能存在多个  <code>target</code>  值，第一个  <code>target</code>  下标之后其他  <code>target</code>  值的下标也需要排除，否则我们找到的就不是<strong>第一个</strong>大于等于目标值  <code>target</code>  的目标了。</p>\n<p>我们可以按照类似方式定义出其他区间形式的区间性质。</p>\n<p>对应开区间：</p>\n<ul>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span> 中的元素是待查找对象</li>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi>L</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(-\\infty, L]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mclose\">]</span></span></span></span> 中的元素均<strong>小于</strong>目标值  <code>target</code></li>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>R</mi><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[R, +\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span> 中的元素均<strong>大于或等于</strong>目标值  <code>target</code></li>\n</ul>\n<p>对应左闭右开区间：</p>\n<ul>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span> 中的元素是待查找对象</li>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(-\\infty, L-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> 中的元素均<strong>小于</strong>目标值  <code>target</code></li>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>R</mi><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[R, +\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span> 中的元素均<strong>大于或等于</strong>目标值  <code>target</code></li>\n</ul>\n<p>对应左开右闭区间：</p>\n<ul>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 中的元素是待查找对象</li>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi>L</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(-\\infty, L]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mclose\">]</span></span></span></span> 中的元素均<strong>小于</strong>目标值  <code>target</code></li>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>R</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[R+1, +\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span> 中的元素均<strong>大于或等于</strong>目标值  <code>target</code></li>\n</ul>\n<p>这样一来，我们就确定了所有区间表示方式下区间内元素的性质。</p>\n<h2 id=\"如何确定循环结束条件\"><a class=\"markdownIt-Anchor\" href=\"#如何确定循环结束条件\">#</a> 如何确定循环结束条件</h2>\n<p>循环结束的判断条件到底是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>&lt;</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L&lt;R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 还是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>≤</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L \\le R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> ？</p>\n<p>因为 “小于” 判断是肯定的，那么确定循环结束条件的关键在于到底是否需要添加 “等于” 判断。我们不妨针对每个区间表示形式分析一下。</p>\n<p>对于闭区间，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 是我们的待搜索区间。当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L=R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 时，表示我们的待搜索区间只有一个元素，而根据我们的定义，左右两个端点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 表示的下标都是有效的待搜索对象下标，显然这个下标对应的元素也符合我们继续搜索判断的要求。那么，在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L=R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 的时候可以添加 “等于” 判断。或者我们可以这样理解，当我们表示的区间中的元素不为空的时候，我们就进入循环；否则，退出循环。对于闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L=R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 时，区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 不为空，因此我们需要继续判断。不过，我们其实可以不添加这个 “等于” 判断。根据我们的定义，所有<strong>小于</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 的下标，其对应值均<strong>小于</strong>  <code>target</code> ；而所有<strong>大于</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 的下标，其对应值均<strong>大于等于</strong>  <code>target</code> ；在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L=R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 的时候，此时 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 指向的已经是第一个<strong>大于等于</strong>  <code>target</code>  的元素了。我们不进入这次循环也无大碍。所以，对于闭区间，是否添加 “等于” 判断都正确。</p>\n<p>当然，这里的判断是针对我们的题目设定而言。如果某个题目要求未找到时返回下标 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span>，那么我们就必须加上 “等于” 的判断，因为我们不知道最后的这一个元素究竟是否是我们的  <code>target</code> ，仍需要最后一次判断。如果不是  <code>targeet</code> ，则返回下标 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span>。<strong>因此，这里推荐加上 “等于” 的判断。</strong></p>\n<p>基于闭区间的结论，我们可以继续确定其他表现形式的循环结束条件。</p>\n<ul>\n<li>对于开区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span>，等价于闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>，那么判断条件就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>+</mo><mn>1</mn><mo>&lt;</mo><mi>R</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">L+1&lt;R-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>+</mo><mn>1</mn><mo>≤</mo><mi>R</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">L+1\\le R-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>；我们不妨化采用包含 “等于” 判断的形式，这样条件可以等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>+</mo><mn>1</mn><mo>&lt;</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L+1&lt;R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 的形式；</li>\n<li>对于左闭右开区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span>，等价于闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>，那么判断条件就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>&lt;</mo><mi>R</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">L&lt;R-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>≤</mo><mi>R</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">L\\le R-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>；我们不妨化采用包含 “等于” 判断的形式，这样条件可以等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>&lt;</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L&lt;R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 的形式；</li>\n<li>对于左开右闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span>，等价于闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span>，那么判断条件就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>+</mo><mn>1</mn><mo>&lt;</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L+1&lt;R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>+</mo><mn>1</mn><mo>≤</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L+1\\le R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>。</li>\n</ul>\n<h2 id=\"如何计算-m-的数值\"><a class=\"markdownIt-Anchor\" href=\"#如何计算-m-的数值\">#</a> 如何计算 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 的数值</h2>\n<p>以闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 为例子，一般在计算中间下标 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 的方式就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">⌊</mo><mfrac><mrow><mi>L</mi><mo>+</mo><mi>R</mi></mrow><mn>2</mn></mfrac><mo fence=\"true\">⌋</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M=\\left\\lfloor\\frac{L+R}{2}\\right\\rfloor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2223em;vertical-align:-0.35em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">⌊</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8723em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">L</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">⌋</span></span></span></span></span></span> ，具体的代码如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>对于  <code>C++</code>  这样的语言，在计算  <code>mid</code>  的时候， <code>left + right</code>  可能会产生溢出，因此更加正确的方式如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> left <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">-</span> left<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>类似地，我们可以得到其他区间形式的计算方式：</p>\n<ul>\n<li>开区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span>，等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>，则 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">⌊</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac><mo fence=\"true\">⌋</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M=\\left\\lfloor\\frac{(L+1)+(R-1)}{2}\\right\\rfloor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌊</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">L</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">+</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌋</span></span></span></span></span></span>，即等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">⌊</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo>+</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac><mo fence=\"true\">⌋</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M=\\left\\lfloor\\frac{(L+R)}{2}\\right\\rfloor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌊</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">L</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌋</span></span></span></span></span></span>，代码为  <code>int mid = (left + 1) + (right - 1 - (left + 1)) / 2;</code> ，也就是  <code>int mid = left + (right - left) / 2;</code> ；</li>\n<li>左闭右开区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span>，等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>，则 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">⌊</mo><mfrac><mrow><mi>L</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac><mo fence=\"true\">⌋</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M=\\left\\lfloor\\frac{L+(R-1)}{2}\\right\\rfloor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌊</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">L</span><span class=\"mbin mtight\">+</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌋</span></span></span></span></span></span>，代码为  <code>int mid = left + (right - 1 - left) / 2;</code> ，也等价于  <code>int mid = left + (right - left) / 2;</code> ；</li>\n<li>左开右闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span>，等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span>，则 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">⌊</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>R</mi></mrow><mn>2</mn></mfrac><mo fence=\"true\">⌋</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M=\\left\\lfloor\\frac{(L+1)+R}{2}\\right\\rfloor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌊</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">L</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌋</span></span></span></span></span></span>，代码为  <code>int mid = (left + 1) + (right - left) / 2;</code> 。</li>\n</ul>\n<p>总结如下：</p>\n<table>\n<thead>\n<tr>\n<th>区间</th>\n<th>等价形式</th>\n<th>计算方式</th>\n<th>计算代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">⌊</mo><mfrac><mrow><mi>L</mi><mo>+</mo><mi>R</mi></mrow><mn>2</mn></mfrac><mo fence=\"true\">⌋</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M=\\left\\lfloor\\frac{L+R}{2}\\right\\rfloor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2223em;vertical-align:-0.35em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">⌊</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8723em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">L</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">⌋</span></span></span></span></span></span></td>\n<td><code>int mid = left + (right - left) / 2;</code></td>\n</tr>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">⌊</mo><mfrac><mrow><mi>L</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac><mo fence=\"true\">⌋</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M=\\left\\lfloor\\frac{L+(R-1)}{2}\\right\\rfloor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌊</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">L</span><span class=\"mbin mtight\">+</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌋</span></span></span></span></span></span></td>\n<td><code>int mid = left + (right - left) / 2;</code></td>\n</tr>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">⌊</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>R</mi></mrow><mn>2</mn></mfrac><mo fence=\"true\">⌋</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M=\\left\\lfloor\\frac{(L+1)+R}{2}\\right\\rfloor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌊</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">L</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌋</span></span></span></span></span></span></td>\n<td><code>int mid = (left + 1) + (right - left) / 2;</code></td>\n</tr>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence=\"true\">⌊</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac><mo fence=\"true\">⌋</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M=\\left\\lfloor\\frac{(L+1)+(R-1)}{2}\\right\\rfloor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌊</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">L</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">+</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⌋</span></span></span></span></span></span></td>\n<td><code>int mid = left + (right - left) / 2;</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"如何确定端点下标的变化方式\"><a class=\"markdownIt-Anchor\" href=\"#如何确定端点下标的变化方式\">#</a> 如何确定端点下标的变化方式</h2>\n<p>在循环中，计算得到中间下标 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 之后，我们会判断其是否是我们的目标值  <code>target</code> 。显然，如果相等，那么我们找到了目标值，直接返回下标 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 即可。那么我们重点关注不等于的情况。</p>\n<p>仍然先以闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 为例。我们在循环中改变 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 的值时，仍然要保证其表示的区间仍然满足我们最开始定义的性质：</p>\n<ul>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L, R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 中的元素是待查找对象</li>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(-\\infty, L-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> 中的元素均<strong>小于</strong>目标值  <code>target</code></li>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>R</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[R+1, +\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span> 中的元素均<strong>大于或等于</strong>目标值  <code>target</code></li>\n</ul>\n<p>因为我们有了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 下标对应值和目标值  <code>target</code>  之间的关系，那么我们可以根据这个新的信息来更新区间，以缩小我们的查找范围。</p>\n<p>对于  <code>arr[mid] &gt; target</code>  的情况，我们要移动下标 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>，而 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 是我们之后待查找的区间。由于  <code>arr[mid] &gt; target</code> ，则必然下标 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 已经被排除了，于是应当更新为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>=</mo><mi>M</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">R=M-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>；类似地，如果是  <code>arr[mid] &lt; target</code> ，则应当更新为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>M</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">L=M+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>。</p>\n<p>对于其他区间，我们可以用类似的方式来分析，或者也可以用等价替换的方式，得到更新的具体方式：</p>\n<ul>\n<li>开区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span>。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 表示的下标是不在之后的判断区间之内的，因此更新方式为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>=</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">R=M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">L=M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>；又开区间等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>，则依据上文闭区间的方式，有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>−</mo><mn>1</mn><mo>=</mo><mi>M</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">R-1=M-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>=</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">R=M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>，以及 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>+</mo><mn>1</mn><mo>=</mo><mi>M</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">L+1=M+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">L=M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>；</li>\n<li>左闭右开区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span>。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 表示的下标在判断范围之内，更新方式为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>M</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">L=M+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 表示的下标不在判断范围之内，更新方式为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>=</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">R=M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>；又此区间等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>，则有更新方式 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>−</mo><mn>1</mn><mo>=</mo><mi>M</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">R-1=M-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>=</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">R=M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>，以及 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>M</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">L=M+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>；</li>\n<li>左开右闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span>。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 表示的下标不在判断范围之内，更新方式为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">L=M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 表示的下标在判断范围之内，更新方式为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>=</mo><mi>M</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">R=M-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>；又此区间等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span>，则有更新方式 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>+</mo><mn>1</mn><mo>=</mo><mi>M</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">L+1=M+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">L=M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>，以及 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>=</mo><mi>M</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">R=M-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>。</li>\n</ul>\n<p>总结如下：</p>\n<table>\n<thead>\n<tr>\n<th>区间</th>\n<th>等价形式</th>\n<th><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 更新方式</th>\n<th><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 更新方式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><code>int left = mid + 1;</code></td>\n<td><code>int right = mid - 1;</code></td>\n</tr>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><code>int left = mid;</code></td>\n<td><code>int right = mid;</code></td>\n</tr>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><code>int left = mid + 1;</code></td>\n<td><code>int right = mid;</code></td>\n</tr>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><code>int left = mid;</code></td>\n<td><code>int right = mid - 1;</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"如何确定返回值\"><a class=\"markdownIt-Anchor\" href=\"#如何确定返回值\">#</a> 如何确定返回值</h2>\n<p>如果数组中存在目标值  <code>target</code> ，那么在循环中会成功返回。而在循环外，该返回哪个下标呢？</p>\n<p>如果题目要求未找到时返回 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mi mathvariant=\"normal\">‘</mi></mrow><annotation encoding=\"application/x-tex\">-`</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">‘</span></span></span></span> 或者其他特殊值，那么直接返回特殊值即可。如果是我们前文的要求，返回第一个大于等于  <code>target</code>  的值的下标，则我们仍然可以根据区间性质来确定返回值。</p>\n<p>仍以闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 为例，我们有如下定义的区间性质：</p>\n<ul>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L, R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 中的元素是待查找对象</li>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(-\\infty, L-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> 中的元素均<strong>小于</strong>目标值  <code>target</code></li>\n<li>下标区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>R</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[R+1, +\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span> 中的元素均<strong>大于或等于</strong>目标值  <code>target</code></li>\n</ul>\n<p>因为在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L=R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 的情况下，仍然会进入循环，此时 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 也满足 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>M</mi><mo>=</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L=M=R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>，那么在循环退出之后，要么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>=</mo><mi>M</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">R=M-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，要么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>=</mo><mi>M</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">L=M+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 的前一个位置。此时，区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(-\\infty,L-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>，也就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(-\\infty,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span> 中的所有元素均<strong>小于</strong>目标值  <code>target</code> ，区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>R</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[R+1,+\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span>，即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[L,+\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span> 中的所有元素均<strong>大于或等于</strong>目标值  <code>target</code> 。那么根据题目的设定，我们可以返回 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">R+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，或者返回 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span>。</p>\n<ul>\n<li>对于开区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span>，等价于闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>，返回 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">L+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>；</li>\n<li>对于左闭右开区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span>，等价于闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>，返回 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 均可；</li>\n<li>对于左开右闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span>，等价于闭区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span>，返回 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">R+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">L+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> 均可。</li>\n</ul>\n<p>总结如下：</p>\n<table>\n<thead>\n<tr>\n<th>区间</th>\n<th>等价形式</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><code>left</code>  或者  <code>right + 1</code></td>\n</tr>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><code>left + 1</code>  或者  <code>right</code></td>\n</tr>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[L,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L,R-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><code>left</code>  或者  <code>right</code></td>\n</tr>\n<tr>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">(L,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>L</mi><mo>+</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[L+1,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span></td>\n<td><code>left + 1</code>  或者  <code>right + 1</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"其他题目条件\"><a class=\"markdownIt-Anchor\" href=\"#其他题目条件\">#</a> 其他题目条件</h2>\n<p>在本文的最开始，我们定义的二分查找是返回第一个<strong>大于等于</strong>  <code>target</code>  的元素。如果是其他的大于、小于或者小于等于的条件，我们也可以使用类似的方法来求取结果。</p>\n<p>前文介绍的了<strong>大于等于</strong>  <code>target</code>  的情况，对于<strong>大于</strong>  <code>target</code>  的情况，由于整数元素的性质，相当于查找大于等于  <code>target + 1</code>  的情况，这样就转化为了我们这里介绍的情形。</p>\n<p>对于<strong>小于</strong>  <code>target</code>  的情况，我们定义是返回小于  <code>target</code>  的<strong>最后一个</strong>元素，那么相当于找到<strong>大于等于</strong>  <code>target</code>  的元素下标  <code>n</code> ，然后返回前一个元素的下标  <code>n - 1</code> 。</p>\n<p>对于<strong>小于等于</strong>  <code>target</code>  的情况，依然定义是返回<strong>小于等于</strong>的<strong>最后一个</strong>元素，那么相当于找到<strong>大于</strong>  <code>target</code>  的第一个元素下标  <code>n</code> ，然后返回前一个元素的下标  <code>n - 1</code> 。</p>\n<p>综上，无论何种情形，我们都可以转化到我们本文介绍的情形。</p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>本文介绍了二分查找法的通用解决办法，在之前文章的基础上又有了更深的思考。其他二分类的查找问题也可以基于这个模板去思考，减少出错的概率。</p>\n",
            "tags": [
                "Computer-Science",
                "Algorithm",
                "Cpp",
                "Binary-Search"
            ]
        },
        {
            "id": "https://linn-ylz.com/Computer-Science/CUDA/CUDA-SGEMM-optimization-notes/",
            "url": "https://linn-ylz.com/Computer-Science/CUDA/CUDA-SGEMM-optimization-notes/",
            "title": "CUDA SGEMM优化笔记",
            "date_published": "2023-10-01T01:19:53.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>本篇博客记录了最近学习的 CUDA 单精度 GEMM 算法的优化过程。</p>\n<p>GEMM 算法是指 General Matrix Multiplication 算法，可以说是大多数线性代数算法的基础，也是目前热门的深度学习中最常用的基础计算，因此优化 GEMM 算法对于许多的应用有着重大意义。本篇博客关注的是 NVIDIA 的 GPU 设备上的 GEMM 算法实现，以 cuBLAS 库的算法性能作为比较基线，不断优化算法以逼近该基线。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/kernel-performance/kernel-cublas.png\" alt=\"cuBLAS kernel\"></p>\n<h2 id=\"基础知识\"><a class=\"markdownIt-Anchor\" href=\"#基础知识\">#</a> 基础知识</h2>\n<p>本节将简要介绍 GPU 的计算模型和内存模型的基础知识。因为算法优化部分的内容较长，本节尽量精简。如果之后有时间，后续可能会详细介绍该部分的内容。</p>\n<h3 id=\"gpu-计算模型\"><a class=\"markdownIt-Anchor\" href=\"#gpu-计算模型\">#</a> GPU 计算模型</h3>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/CUDA-computation-model.png\" alt=\"CUDA Computation Model\"></p>\n<p>GPU 的计算模型可以分为上图所示的三级。最基础的执行单元是 thread，用于执行控制单元下发的指令。每个 thread 都属于某一个 block，block 可以有三个维度，在线程中可以通过 CUDA 内置的变量来获取线程对应的 id。每个 block 则又属于一个 grid，grid 也可以有三个维度，有 CUDA 内置变量用于确定 block 的 id。</p>\n<p>对于 thread，可以使用  <code>threadIdx.x</code> ， <code>threadIdx.y</code> ， <code>threadIdx.z</code>  获取其在三个维度上的坐标以确定其 “身份”。当然，如果某一个维度的大小为 1，那么我们计算时可以省略。我们可以通过  <code>blockDim.x</code> ， <code>blockDim.y</code> ， <code>blockDim.z</code>  获取线程所在 block 三个维度的大小。类似地，block 可以使用  <code>blockIdx.x</code> ， <code>bloxkIdx.y</code> ， <code>blockIdx.z</code>  获取其在三个维度上的坐标， <code>gridDim.x</code> ， <code>gridDim.y</code> ， <code>gridDim.z</code>  可以获取 block 所在 grid 的三个维度的大小。</p>\n<p>而具体到调度层面，需要注意，CUDA 以 block 为单位，将其中的线程调度到某一个 SM（Streaming Multiprocessor）上执行，而在真正执行的时候，CUDA 会将 block 中的线程以 32 个为一个 warp 进行调度，它们的线程 id 连续。如果线程数量不是 32 的倍数，那么 CUDA 会将其补齐。所以我们为每个 block 分配线程时，尽量将数量设置为 32 的倍数。</p>\n<p>另外提一句，在访存的时候，会以 half-warp 为单位访存，也就是线程 id 连续的 16 个线程一组进行访存，在考虑 bank conflict 的时候需要注意这一点。</p>\n<p>在调用编写的核函数时，我们需要指定 grid 和 block 的维度，一个简单的示例如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Kernel definition  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>__global__ <span class=\"token keyword\">void</span> <span class=\"token function\">MatAdd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> A<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> B<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> C<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> blockDim<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> blockIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> blockDim<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> threadIdx<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> N <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        C<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// Kernel invocation  </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    dim3 <span class=\"token function\">threadsPerBlock</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    dim3 <span class=\"token function\">numBlocks</span><span class=\"token punctuation\">(</span>N <span class=\"token operator\">/</span> threadsPerBlock<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> N <span class=\"token operator\">/</span> threadsPerBlock<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    MatAdd<span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">&lt;</span>numBlocks<span class=\"token punctuation\">,</span> threadsPerBlock<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> C<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"gpu-内存模型\"><a class=\"markdownIt-Anchor\" href=\"#gpu-内存模型\">#</a> GPU 内存模型</h3>\n<p>GPU 的内存可以分为 off-chip 和 on-chip 内存两大类别。off-chip 的特点是容量大，但是访存延迟高；on-chip 的特点则是容量小，但是访存延迟低。</p>\n<p>off-chip 内存主要有 global memory，on-chip 内存则主要有 shared memory 和 register。三者中，register 的访存速度最快，shared memory 次之，global memory 最慢。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/memory-hierarchy.png\" alt=\"CUDA Memory Hierarchy\"></p>\n<p>如上图所示，每个 block 之间共享 global memory，而每个 block 自己则有一块 shared memory，block 中的每个 thread 共享这块 shared memory。此外，每个线程有自己独占的 register 和 local memory，local memory 一般也存放在 global memory 中。</p>\n<p>由于 global memory 访存延迟较高，我们很多时候都会将数据读取到 shared memory 中；在某些情况下，甚至会手动使用 register 来缓存 shared memory 中的数据。</p>\n<p>可以说，想要优化好 CUDA 上的算法，必须要注意降低或者隐藏访存延迟的开销，在后续的算法优化中我们可以看到这一点。</p>\n<p>在调用编写的核函数之前，我们需要使用  <code>cudaMalloc</code>  和  <code>cudaMemcpy</code>  函数来在 GPU 上分配内存，并将 host 侧的数据拷贝到 device 侧。</p>\n<h2 id=\"gemm-算法优化\"><a class=\"markdownIt-Anchor\" href=\"#gemm-算法优化\">#</a> GEMM 算法优化</h2>\n<p>cuBLAS 中实现的通用的 GEMM 算法形式为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>=</mo><mi>α</mi><mi>A</mi><mi>B</mi><mo>+</mo><mi>β</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C=\\alpha AB+\\beta C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">βC</span></span></span></span>。其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo separator=\"true\">,</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">A,B,C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 均为矩阵，shape 为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>×</mo><mi>K</mi><mo separator=\"true\">,</mo><mi>K</mi><mo>×</mo><mi>N</mi><mo separator=\"true\">,</mo><mi>M</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">M\\times K,K\\times N,M \\times N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span> 为标量。</p>\n<p>最简单的实现是 CPU 的串行算法。如果我们对于某个算法在 GPU 中的实现感到难以下手，那么我们可以先从 CPU 算法开始。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">OFFSET</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>stride<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">cpu_naive_matmul</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> M<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> N<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> K<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> alpha<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>A<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>B<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> beta<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>C<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> M<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">float</span> val <span class=\"token operator\">=</span> <span class=\"token number\">0.</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                val <span class=\"token operator\">+=</span> A<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> B<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> val <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"naive-实现\"><a class=\"markdownIt-Anchor\" href=\"#naive-实现\">#</a> Naive 实现</h3>\n<p>本节介绍最简单的 CUDA SGEMM 实现，每个线程负责矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 中的一个元素的计算。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/naive-kernel.png\" alt=\"CUDA naive kernel 实现\"></p>\n<p>假定我们启动核函数时的 block 大小为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>M</mi><mo>×</mo><mi>B</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">BM\\times BN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BM</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BN</span></span></span></span>，那么我们可以计算每个线程对应的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 中元素的下标：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> blockDim<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> blockIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> blockDim<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> threadIdx<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>我们在启动核函数时，一个 grid 中可能会包含多个 block，所以这里还要使用  <code>blockIdx.x</code> ， <code>blockIdx.y</code>  和  <code>blockDim.x</code>  和  <code>blockDim.y</code>  相乘获取每个 block 的基址，即每个 block 最左上方的元素对应的下标。然后再分别加上线程在 block 中的偏移  <code>threadIdx.x</code>  和  <code>threadIdx.y</code> 。</p>\n<p>后续的步骤就和 CPU 版本的代码相差无几了：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row <span class=\"token operator\">&lt;</span> M <span class=\"token operator\">&amp;&amp;</span> col <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">float</span> val <span class=\"token operator\">=</span> <span class=\"token number\">0.</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        val <span class=\"token operator\">+=</span> A<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> B<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> val <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里加上了  <code>if (row &lt; M &amp;&amp; col &lt; N)</code>  判断以防越界，因为有时候<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 无法被 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">BM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BM</span></span></span></span>，或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 无法被 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">BN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BN</span></span></span></span> 整除。</p>\n<p>完整代码如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">OFFSET</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>stride<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>__global__ <span class=\"token keyword\">void</span> <span class=\"token function\">naive_kernel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> M<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> N<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> K<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                             <span class=\"token keyword\">float</span> alpha<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>A<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>B<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> beta<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>C<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> blockDim<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> blockIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> blockDim<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> threadIdx<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row <span class=\"token operator\">&lt;</span> M <span class=\"token operator\">&amp;&amp;</span> col <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">float</span> val <span class=\"token operator\">=</span> <span class=\"token number\">0.</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            val <span class=\"token operator\">+=</span> A<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> B<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> val <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>性能比较如下：</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/kernel-performance/kernel-naive.png\" alt=\"naive kernel\"></p>\n<p>可以看到，朴素实现的性能基本都在 1000 GFLOPS 左右，只有 cuBLAS 库性能的十分之一。</p>\n<p>我们可以做一个简单的计算。对于矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 中的每个元素，我们需要访问 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 中各 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 个元素，总共 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">2K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 次全局内存访问。同时，循环中进行了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 次乘法和加法共 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">2K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 次运算。计算下来，平均每一次计算就需要一次访存。考虑到 global memory 的访存延迟，这样的做法显然是非常没有效率的。</p>\n<p>通过 Nsight Compute 工具也可以看到， <code>warp</code>  花费了大量时间等待全局内存的读写：</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/naive-kernel-warp-state.png\" alt=\"naive kernel warp state\"></p>\n<p>切换到代码页面也能看到具体是哪些代码导致了这些 stall。可以发现，我们的核心计算语句耗费了大量时间等待访存读写，这也是我们可以优化的着手点。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/naive-kernel-hotspot-code.png\" alt=\"naive kernel hotspot code\"></p>\n<h3 id=\"使用-shared-memory-优化访存\"><a class=\"markdownIt-Anchor\" href=\"#使用-shared-memory-优化访存\">#</a> 使用 Shared Memory 优化访存</h3>\n<p>朴素实现中对输入的访问全部都是直接对全局内存进行操作。前文中我们提到，全局内存的访存速度是最慢的，这限制了核函数的计算效率，每个线程耗费了大量的时间等待访存。我们可以尝试使用共享内存来缓存一部分的输入。</p>\n<p>可以发现，对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 中的每一行元素，在计算过程中都需要访问 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 矩阵中的同一行元素；对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 中每一列元素，在计算过程中需要访问 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 矩阵中的同一列元素。那么，对于一个 block 中需要计算的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>M</mi><mo>×</mo><mi>B</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">BM \\times BN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BM</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BN</span></span></span></span> 元素，有许多对相同地址的重复访问。因此，我们可以使用共享内存预先读取全局内存中所需要的元素，然后计算时直接读取共享内存，节省访存时的等待时间。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/shared-memory-kernel.png\" alt=\"CUDA 使用 shared memory 的实现\"></p>\n<p>我们开辟两块 shared memory 中的空间，分别用于存储从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 中读取的元素：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__shared__ <span class=\"token keyword\">float</span> As<span class=\"token punctuation\">[</span>BM<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>BK<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>__shared__ <span class=\"token keyword\">float</span> Bs<span class=\"token punctuation\">[</span>BK<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>BN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>计算时，我们每次需要读取每行或者每列中的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">BK</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 个元素，那么需要迭代 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mi mathvariant=\"normal\">/</mi><mi>B</mi><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K/BK</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 次，每次读取 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 中的一块区域的元素。然后对读取的元素，每个线程使用其所需的元素进行计算。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">float</span> val <span class=\"token operator\">=</span> <span class=\"token number\">0.</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> num_shared_block <span class=\"token operator\">=</span> <span class=\"token function\">CEIL_DIV</span><span class=\"token punctuation\">(</span>K<span class=\"token punctuation\">,</span> BK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>A <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>A<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> BM<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Relative position </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>B <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>B<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> BN<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Relative position</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>C <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> BM<span class=\"token punctuation\">,</span> blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> BN<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Relative position</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num_shared_block<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// Copy data from global memory to shared memory  </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> A_row <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">int</span> A_col <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> BM <span class=\"token operator\">+</span> A_row<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> M <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> BK <span class=\"token operator\">+</span> A_col<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        As<span class=\"token punctuation\">[</span>threadIdx<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>A_row<span class=\"token punctuation\">,</span> A_col<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        As<span class=\"token punctuation\">[</span>threadIdx<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">int</span> B_row <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">int</span> B_col <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> BK <span class=\"token operator\">+</span> B_row<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> K <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> BN <span class=\"token operator\">+</span> B_col<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        Bs<span class=\"token punctuation\">[</span>threadIdx<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> B<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>B_row<span class=\"token punctuation\">,</span> B_col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        Bs<span class=\"token punctuation\">[</span>threadIdx<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">__syncthreads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    A <span class=\"token operator\">+=</span> BK<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Add offset</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    B <span class=\"token operator\">+=</span> BK <span class=\"token operator\">*</span> N<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Add offset</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> BK<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        val <span class=\"token operator\">+=</span> As<span class=\"token punctuation\">[</span>threadIdx<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Bs<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">__syncthreads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>注意上述代码中，我们为三个矩阵的指针添加了偏移量，后续计算坐标时，只需要计算其在子矩阵中的相对位置即可。不过也要注意，在判断是否越界时，需要转换为全局的下标，否则会判断错误。</p>\n<p>每次迭代中，我们只计算了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 中对应元素值的一部分，待到迭代完毕，便得到了最终的结果。注意迭代过程中，使用了  <code>__syncthreads()</code>  来同步每个线程，防止数据读取不同步，造成读取的数据错误。</p>\n<p>最后，将计算结果写回：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> C_row <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> C_col <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> BM <span class=\"token operator\">+</span> C_row<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> M <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> BN <span class=\"token operator\">+</span> C_col<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>C_row<span class=\"token punctuation\">,</span> C_col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> val <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>C_row<span class=\"token punctuation\">,</span> C_col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/kernel-performance/kernel-sm.png\" alt=\"shared memory kernel\"></p>\n<p>emmm，理论上而言，每个 block 需要从全局内存中读取 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>K</mi><mrow><mi>B</mi><mi>K</mi></mrow></mfrac><mo>×</mo><mo stretchy=\"false\">(</mo><mi>B</mi><mi>M</mi><mo>×</mo><mi>B</mi><mi>K</mi><mo>+</mo><mi>B</mi><mi>K</mi><mo>×</mo><mi>B</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\frac{K}{BK}\\times(BM\\times BK + BK\\times BN)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2173em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8723em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BM</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BN</span><span class=\"mclose\">)</span></span></span></span> 个浮点数。而朴素算法中，一个 block 总共需要 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi>K</mi><mo>×</mo><mi>B</mi><mi>M</mi><mo>×</mo><mi>B</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">2K\\times BM \\times BN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BM</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BN</span></span></span></span> 次访存。可以看到，使用了一维 Tile 方法之后，访存降为了原来的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy=\"false\">(</mo><mfrac><mn>1</mn><mrow><mi>B</mi><mi>N</mi></mrow></mfrac><mo>+</mo><mfrac><mn>1</mn><mrow><mi>B</mi><mi>M</mi></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{2}(\\frac{1}{BN}+\\frac{1}{BM})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">BN</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">BM</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span>。一般有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>M</mi><mo>=</mo><mi>B</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">BM=BN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BM</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BN</span></span></span></span>，因此，全局内存访问将为了原来的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><mrow><mi>B</mi><mi>M</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{BM}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">BM</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>。而每个线程的计算量不变，则计算访存比也降低为原来的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><mrow><mi>B</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{BN}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">BN</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>。不过从我测试的结果来看，和 naive 的结果比较并没有明显的区别，甚至还变差了一丢丢。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/shared-memory-kernel-warp-state.png\" alt=\"shared memory kernel warp state\"></p>\n<p>可以看到，这次是  <code>Stall MIO Throttle</code>  这一项的 stall cycles 最多。这一项根据文档说明，一般是某些特殊的数学计算函数、动态分支、共享内存读写导致的，放在我们的上下文中，那就可以肯定是共享内存导致的瓶颈，在横轴上几乎和使用全局内存的代码一致，数值也很接近。这也是为什么这段代码和直接使用全局代码的性能几乎没有变化。</p>\n<h3 id=\"一维-tile\"><a class=\"markdownIt-Anchor\" href=\"#一维-tile\">#</a> 一维 Tile</h3>\n<p>要进一步优化，可以从前文的 profiling 结果入手。我们无论是使用全局内存还是共享内存，主要的瓶颈都在访存上。为了进一步掩盖访存开销，我们要么可以提高访存的效率，要么让每个线程的负载更多一点，以使得能够掩盖访存的开销。</p>\n<p>这里我们先尝试提高每个线程的负载， 让每个线程多计算一些元素的输出。这里我们让每个线程计算矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 一列中连续几个元素的值。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/thread-tile-1d-kernel.png\" alt=\"一维 Tile\"></p>\n<p>在使用共享内存的基础上，我们添加了一维 Tile 的代码。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">float</span> val<span class=\"token punctuation\">[</span>TM<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0.</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>因为每个线程需要计算 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">TM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TM</span></span></span></span> 个元素的结果，我们使用一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">TM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TM</span></span></span></span> 大小的数组来存储中间结果。</p>\n<p>在拷贝数据时，每个线程需要在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 矩阵中多拷贝 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">TM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TM</span></span></span></span> 次：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Copy data from global memory to shared memory  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> A_row <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> TM <span class=\"token operator\">+</span> m<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> A_col <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> BM <span class=\"token operator\">+</span> A_row<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> M <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> BK <span class=\"token operator\">+</span> A_col<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        As<span class=\"token punctuation\">[</span>A_row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>A_col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>A_row<span class=\"token punctuation\">,</span> A_col<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        As<span class=\"token punctuation\">[</span>A_row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>A_col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>计算中间结果时，也需要多一层循环：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> BK<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> A_row <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> TM <span class=\"token operator\">+</span> m<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> B_col <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        val<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> As<span class=\"token punctuation\">[</span>A_row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Bs<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>B_col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>最后，将计算结果写回：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> C_row <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> TM <span class=\"token operator\">+</span> m<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> C_col <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> BM <span class=\"token operator\">+</span> C_row<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> M <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> BN <span class=\"token operator\">+</span> C_col<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>C_row<span class=\"token punctuation\">,</span> C_col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> val<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>C_row<span class=\"token punctuation\">,</span> C_col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/kernel-performance/kernel-tile-1d.png\" alt=\"1d tile kernel\"></p>\n<p>可以看到，使用 Tile 之后，性能得到了一定的提升，逼近了 2000 GFLOPS。一个 block 全局访存的数量依然为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mo>+</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">K(M+N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>，但是每个线程负责的计算量为原来的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">TM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TM</span></span></span></span> 倍，因此计算访存比提升了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">TM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TM</span></span></span></span> 倍。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/tile-1d-kernel-warp-state.png\" alt=\"tile 1d kernel warp state\"></p>\n<p>这次可以看到，相比仅使用共享内存，增加线程计算负载之后  <code>Stall MIO Throttle</code>  这一项的横轴数值有了减小，之前超过了 20 cycles per instruction，现在已经在 20 以下了。不过也可以看出，这一项的延时依然较高，我们还可以有提升空间。</p>\n<h3 id=\"二维-tile\"><a class=\"markdownIt-Anchor\" href=\"#二维-tile\">#</a> 二维 Tile</h3>\n<p>和一维 Tile 类似，这次我们让每个线程负责计算矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 中一小块 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>M</mi><mo>×</mo><mi>T</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">TM \\times TN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TM</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TN</span></span></span></span> 区域中的元素，进一步提升每个线程的负载。有了一维 Tile 的代码，我们简单地在其基础之上做少许修改，便可以得到二维 Tile 的代码。</p>\n<p>存储中间结果需要分配 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>M</mi><mo>×</mo><mi>T</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">TM \\times TN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TM</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TN</span></span></span></span> 大小的空间：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">float</span> val<span class=\"token punctuation\">[</span>TM<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>TN<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0.</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>注意这里的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">TM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TM</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">TN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TN</span></span></span></span> 不能设置过大，否则可能寄存器资源不够，导致 register spill，这时中间数据便会使用 local memory 存储，访存速度会慢很多。</p>\n<p>拷贝数据时，在矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 上也要多拷贝 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">TN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TN</span></span></span></span> 次：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> B_row <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> B_col <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> TN <span class=\"token operator\">+</span> n<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> BK <span class=\"token operator\">+</span> B_row<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> K <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> BN <span class=\"token operator\">+</span> B_col<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        Bs<span class=\"token punctuation\">[</span>B_row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>B_col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> B<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>B_row<span class=\"token punctuation\">,</span> B_col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        Bs<span class=\"token punctuation\">[</span>B_row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>B_col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>同理，计算结果时需要使用二重循环：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> BK<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> A_row <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> TM <span class=\"token operator\">+</span> m<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">int</span> B_col <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> TN <span class=\"token operator\">+</span> n<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            val<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> As<span class=\"token punctuation\">[</span>A_row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Bs<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>B_col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结果写回：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> C_row <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> TM <span class=\"token operator\">+</span> m<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> C_col <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> TN <span class=\"token operator\">+</span> n<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> BM <span class=\"token operator\">+</span> C_row<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> M <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> BN <span class=\"token operator\">+</span> C_col<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>C_row<span class=\"token punctuation\">,</span> C_col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> val<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>C_row<span class=\"token punctuation\">,</span> C_col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/kernel-performance/kernel-tile-2d.png\" alt=\"2d tile kernel\"></p>\n<p>可以看到，现在的性能相比朴素的实现有了很大的提升，性能接近了 4000 GFLOPS。在一维 Tile 的基础之上，计算访存比进一步提升了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">TN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TN</span></span></span></span> 倍。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/tile-2d-kernel-warp-state.png\" alt=\"tile 2d kernel warp state\"></p>\n<p>可以看到，现在的  <code>Stall MIO Throttle</code>  已经降低到 11 cycles per instruction。相比仅使用共享内存，降低到了原来的不到一半。性能的数值也和 profiling 的结果能够互相印证。</p>\n<h3 id=\"使用寄存器进一步优化访存\"><a class=\"markdownIt-Anchor\" href=\"#使用寄存器进一步优化访存\">#</a> 使用寄存器进一步优化访存</h3>\n<p>对于二维 Tile 中计算矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 结果的代码：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> BK<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> A_row <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> TM <span class=\"token operator\">+</span> m<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">int</span> B_col <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> TN <span class=\"token operator\">+</span> n<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            val<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> As<span class=\"token punctuation\">[</span>A_row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Bs<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>B_col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到，对于  <code>As</code>  中的内容重复访问了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">TN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TN</span></span></span></span> 次；对于  <code>Bs</code>  中的内容，在外层的  <code>m</code>  迭代中，也会重复访问 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">TM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TM</span></span></span></span> 次。因此，我们可以使用寄存器将这部分内容缓存下来，进一步提升访存。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> BK<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> A_row <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> TM <span class=\"token operator\">+</span> m<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        As_cache<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> As<span class=\"token punctuation\">[</span>A_row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> B_col <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> TN <span class=\"token operator\">+</span> n<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        Bs_cache<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Bs<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>B_col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            val<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> As_cache<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Bs_cache<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>不过这部分的优化在我的测试中对性能的提升并不明显。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/kernel-performance/kernel-reg-cache.png\" alt=\"register cache kernel\"></p>\n<p>在 profiling 的结果中发现，和使用之前对于  <code>Stall MIO Throttle</code>  指标几乎没有降低，也就是并没有降低访存的开销。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/reg-cache-kernel-code.png\" alt=\"register cache kernel code\"></p>\n<p>从代码对应图中可以看到，虽然我们使用了寄存器，但是从共享内存读取数据到寄存器中的时候依然存在较大的  <code>MIO</code>  延迟，即这个延迟只是从一条语句转移到了其他语句之上，并没有被我们掩盖掉，所以没有性能提升也就是正常的了。</p>\n<h3 id=\"使用-float4-指令优化访存\"><a class=\"markdownIt-Anchor\" href=\"#使用-float4-指令优化访存\">#</a> 使用 FLOAT4 指令优化访存</h3>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/kernel-performance/tile-2d-performance-analysis.png\" alt=\"tile 2d performance analysis\"></p>\n<p>通过前面 profiling 的结果，能够发现很大一部分时间仍然花在了等待访存之上。可以看到，内存带宽的使用负载大于计算的负载。访存延迟依然是程序性能的瓶颈。</p>\n<p>我们可以进一步利用 GPU  <code>float4</code>  访存特性来进一步优化，让每个元素一次获取 4 个浮点数，进一步减少访存次数。相比于访存 4 次获取 4 个浮点数，通过  <code>float4</code>  向量内存指令所需的访存指令数更少，减少了对内存访问的竞争；另一方面，使用向量加载每个字节需要的索引计算更少，我们只需要计算一次索引即可读取 4 个浮点数。但是这样一来，代码也会变得略显复杂。</p>\n<p>同时，我们在读取矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 的内容时，还要对其进行转置，然后再存储到 shared memory 中，以方便后续线程计算时使用  <code>float4</code>  读取，以避免共享内存的 bank conflict。</p>\n<p>我们使用以下宏来定义一次访问 4 个浮点数的操作：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">FETCH_FLOAT4</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>pointer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>reinterpret_cast<span class=\"token operator\">&lt;</span>float4<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>pointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr></table></figure><p>需要注意，因为使用了 FLOAT4 访存的缘故，矩阵的元素数量必须是 4 的倍数，不再能够支持任意大小的矩阵<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>。</p>\n<p>对于  <code>As</code>  缓存，其分配的空间能够存储 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>M</mi><mo>×</mo><mi>B</mi><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">BM\\times BK</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BM</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 个浮点数，在一个 block 中共有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>B</mi><mi>M</mi><mi mathvariant=\"normal\">/</mi><mi>T</mi><mi>M</mi><mo stretchy=\"false\">)</mo><mo>×</mo><mo stretchy=\"false\">(</mo><mi>B</mi><mi>N</mi><mi mathvariant=\"normal\">/</mi><mi>T</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(BM/TM)\\times (BN/TN)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BM</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TM</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BN</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">TN</span><span class=\"mclose\">)</span></span></span></span> 个线程，每个线程一次读取 4 个浮点数，那么总共需要读取 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>B</mi><mi>M</mi><mo>×</mo><mi>B</mi><mi>K</mi></mrow><mrow><mi>B</mi><mi>M</mi><mi mathvariant=\"normal\">/</mi><mi>T</mi><mi>M</mi><mo>×</mo><mi>B</mi><mi>N</mi><mi mathvariant=\"normal\">/</mi><mi>T</mi><mi>N</mi><mo>×</mo><mn>4</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{BM\\times BK}{BM/TM\\times BN/TN \\times 4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3923em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8723em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">BM</span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">TM</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">BN</span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">TN</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">4</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">BM</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> 次；同理， <code>Bs</code>  缓存需要读取 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>B</mi><mi>K</mi><mo>×</mo><mi>B</mi><mi>N</mi></mrow><mrow><mi>B</mi><mi>M</mi><mi mathvariant=\"normal\">/</mi><mi>T</mi><mi>M</mi><mo>×</mo><mi>B</mi><mi>N</mi><mi mathvariant=\"normal\">/</mi><mi>T</mi><mi>N</mi><mo>×</mo><mn>4</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{BK\\times BN}{BM/TM\\times BN/TN \\times 4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3923em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8723em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">BM</span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">TM</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">BN</span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">TN</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">4</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">BN</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> block_row_thread <span class=\"token operator\">=</span> BN <span class=\"token operator\">/</span> TN<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> block_col_thread <span class=\"token operator\">=</span> BM <span class=\"token operator\">/</span> TM<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> thread_num <span class=\"token operator\">=</span> block_row_thread <span class=\"token operator\">*</span> block_col_thread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> load_a_cache_time <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>BK <span class=\"token operator\">*</span> BM<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> thread_num <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Each thread load 4 float</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> load_b_cache_time <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>BK <span class=\"token operator\">*</span> BN<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> thread_num <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Each thread load 4 float</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/float4-kernel.png\" alt=\"使用 float4 访存\"></p>\n<p>如上图所示，假设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>K</mi><mo>=</mo><mn>16</mn></mrow><annotation encoding=\"application/x-tex\">BK=16</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">16</span></span></span></span>，共有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">8</span></span></span></span> 个线程，那么一次读取就能够读完  <code>As</code>  中的两行。那么每个线程下一次读取时间隔的行数就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>8</mn><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mi>K</mi><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">8/(BK/4)=2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">8/</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\">/4</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>。</p>\n<p>其实，我们不妨把  <code>As</code>  看成一个矩阵元素是  <code>float4</code>  的矩阵，那么原来的  <code>As</code>  就相当于一个大小为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>M</mi><mo>×</mo><mo stretchy=\"false\">(</mo><mi>B</mi><mi>K</mi><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">BM\\times (BK/4)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BM</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\">/4</span><span class=\"mclose\">)</span></span></span></span> 大小的新矩阵  <code>As_new</code> 。那么，我们可以根据线程的  <code>id</code>  来计算其对应放置的地址偏移，我们不妨把线程看成一维的，这样更方便计算。</p>\n<p>首先，计算出线程的 id：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> thread_id <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> blockDim<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>As</code>  中每一行需要 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>K</mi><mi mathvariant=\"normal\">/</mi><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">BK/4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\">/4</span></span></span></span> 个线程读取，那么线程对应的行数为：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a_tile_row <span class=\"token operator\">=</span> thread_id <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>BK <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>同理，对应的列数为  <code>thread_id % (BK / 4)</code> 。不过这是  <code>As_new</code>  中地址便宜，换算回  <code>As</code>  还得乘 4，也就是：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a_tile_col <span class=\"token operator\">=</span> thread_id <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>BK <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>按照上述方式，我们也可以计算得出  <code>Bs</code>  的对应偏移：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> b_tile_row <span class=\"token operator\">=</span> thread_id <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>BN <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> b_tile_col <span class=\"token operator\">=</span> thread_id <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>BN <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>上述计算的地址是每次读取的子矩阵中的相对偏移，每次读取时，我们还需要添加一个基址偏移。对于  <code>As</code> ，共有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">BM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BM</span></span></span></span> 行，上面计算得到了共需要读取  <code>load_a_cache_time</code> ，那么可以知道每次需要偏移的大小为：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a_tile_stride <span class=\"token operator\">=</span> BM <span class=\"token operator\">/</span> load_a_cache_time<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>同理， <code>Bs</code>  中的对应大小为：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> b_tile_stride <span class=\"token operator\">=</span> BK <span class=\"token operator\">/</span> load_b_cache_time<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在读取  <code>As</code>  时，注意还需要对其进行转置，其代码如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> BM<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> a_tile_stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> cache_idx <span class=\"token operator\">=</span> i <span class=\"token operator\">/</span> a_tile_stride <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>load_a_cache<span class=\"token punctuation\">[</span>cache_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>a_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> a_tile_col<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// Use load_a_cache for load 4 float at a time  </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// As is saved as transpose matrix  </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    As<span class=\"token punctuation\">[</span>a_tile_col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> load_a_cache<span class=\"token punctuation\">[</span>cache_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    As<span class=\"token punctuation\">[</span>a_tile_col <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> load_a_cache<span class=\"token punctuation\">[</span>cache_idx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    As<span class=\"token punctuation\">[</span>a_tile_col <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> load_a_cache<span class=\"token punctuation\">[</span>cache_idx <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    As<span class=\"token punctuation\">[</span>a_tile_col <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> load_a_cache<span class=\"token punctuation\">[</span>cache_idx <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里开辟了一个寄存器缓存  <code>load_a_cache</code> ，作为转置时的临时存放空间，其大小为  <code>load_a_cache_time * 4</code> 。注意下面为每次读取单独开辟了空间存储，而不是复用之前的空间。我在测试的时候发现，如果复用之前的空间，会因为数据写入地址的依赖导致计算结果出错。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">float</span> load_a_cache<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> load_a_cache_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>每次读取时，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 矩阵的基础行偏移量为循环变量中的  <code>i</code> ，其每次变化  <code>a_tile_stride</code> ，在此基础之上，每个线程本身还需要添加一个行偏移量  <code>a_tile_row</code> ，和列偏移量  <code>a_tile_col</code> 。每次读取 4 个元素，将其存放在  <code>load_a_cache</code>  中的对应位置， <code>cache_idx</code>  可以由  <code>i / a_tile_stride * 4</code>  计算得到， <code>i / a_tile_stride</code>  表示迭代的次数，乘 4 表示每次存放 4 个元素。</p>\n<p>读取之后，我们将  <code>load_a_cache</code>  中的元素转置存放在  <code>As</code>  中，注意下标的计算。</p>\n<p>类似地， <code>Bs</code>  的读取代码如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> BK<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> b_tile_stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>Bs<span class=\"token punctuation\">[</span>b_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>b_tile_col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>b_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> b_tile_col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>因为  <code>Bs</code>  不需要转置，我们可以直接将其存放在  <code>Bs</code>  对应位置中。</p>\n<p>注意上述代码中的  <code>A</code>  和  <code>B</code>  都预先添加了偏移量， <code>C</code>  也是：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>A <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>A<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> BN<span class=\"token punctuation\">;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Set block start position  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>B <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>B<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> blockIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> BM<span class=\"token punctuation\">;</span><span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>C <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> BN<span class=\"token punctuation\">,</span> blockIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> BM<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>后续的计算基本和二维 Tile 中的代码一致，只不过我们会一次性读取 4 个浮点数：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> BK<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> m <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>As_cache<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>As<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>ty <span class=\"token operator\">+</span> m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> n <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>Bs_cache<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>Bs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>tx <span class=\"token operator\">+</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            accum<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> As_cache<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Bs_cache<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>注意本文的所有  <code>for</code>  循环代码中，为了简洁，去掉了每个  <code>for</code>  循环上的  <code>#pragma unroll</code>  循环展开指令。实际中可以添加该指令进一步提升指令吞吐。</p>\n</div>\n<p>后续写回结果，也可以使用  <code>float4</code>  来减少访存次数：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">float</span> tmp<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0.</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> n <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>ty <span class=\"token operator\">+</span> m<span class=\"token punctuation\">,</span> tx <span class=\"token operator\">+</span> n<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        tmp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> accum<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> tmp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        tmp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> accum<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> tmp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        tmp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> accum<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> tmp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        tmp<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> accum<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> tmp<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>ty <span class=\"token operator\">+</span> m<span class=\"token punctuation\">,</span> tx <span class=\"token operator\">+</span> n<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>性能对比如下：</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/kernel-performance/kernel-float4.png\" alt=\"float4 kernel\"></p>\n<p>可以看到，使用  <code>float4</code>  访存之后性能得到了很大的提升。每个线程的计算量并没有改变，但是现在每次可以读取 4 个浮点数，全局内存访问次数进一步降低了四分之一。而且指令的执行效率也提升。相比于访存 4 次获取 4 个浮点数，通过  <code>float4</code>  向量内存指令所需的访存指令数更少，减少了对内存访问的竞争；另一方面，使用矢量加载每个字节需要的索引计算更少。这些是隐形的对性能的提升。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/float4-kernel-warp-state.png\" alt=\"float4 kernel warp state\"></p>\n<p>从 profiling 结果可以看到，通过使用  <code>float4</code>  访存基本上消除了  <code>MIO</code>  的延迟。图中的其他指标的延迟也在 1~1.5 cycles per instruction 之间。</p>\n<h3 id=\"数据预取\"><a class=\"markdownIt-Anchor\" href=\"#数据预取\">#</a> 数据预取</h3>\n<p>在上文的代码中，我们在循环中使用了两次  <code>__syncthreads()</code>  来做线程同步，以防止不同线程之间的数据不一致。其中第一个  <code>__syncthreads()</code>  是为了保证写后读（Read-After-Write）的顺序性，这个是无法避免的。</p>\n<p>关键在于后一个同步，它是为了防止部分线程还未读取  <code>As</code>  或者  <code>Bs</code>  中的内容，保证读后写（Write-After-Read）的顺序性。它本质上是因为我们在不同迭代中使用了同一块空间来保存我们所需的数据，这两次迭代中的数据之间并不存在真正的依赖关系。如果我们将其写入到其他地址上，那么就不需要使用同步了。</p>\n<p>这种方式称为数据预取，又可以称为双缓存（Double Buffering）。我们可以申请两倍所需的空间，用于在迭代中交替使用，从而省去后一次线程同步的操作。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__shared__ <span class=\"token keyword\">float</span> As<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>BK<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>BM<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// transpose shared A for avoid bank conflict, for double buffering  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>__shared__ <span class=\"token keyword\">float</span> Bs<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>BK<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>BN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// for double buffering</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">float</span> As_cache<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>TM<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0.</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// double buffering  </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">float</span> Bs_cache<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>TN<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0.</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// double buffering</span></pre></td></tr></table></figure><p>在迭代中，我们可以使用一个变量来控制写入的地址：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> write_idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">;</span> k <span class=\"token operator\">+=</span> BK<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> BM<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> a_tile_stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> cache_idx <span class=\"token operator\">=</span> i <span class=\"token operator\">/</span> a_tile_stride <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>load_a_cache<span class=\"token punctuation\">[</span>cache_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>a_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> a_tile_col<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// Use load_a_cache for load 4 float at a time  </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// As is saved as transpose matrix  </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        As<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a_tile_col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> load_a_cache<span class=\"token punctuation\">[</span>cache_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        As<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a_tile_col <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> load_a_cache<span class=\"token punctuation\">[</span>cache_idx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        As<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a_tile_col <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> load_a_cache<span class=\"token punctuation\">[</span>cache_idx <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        As<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a_tile_col <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> load_a_cache<span class=\"token punctuation\">[</span>cache_idx <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> BK<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> b_tile_stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>Bs<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>b_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>b_tile_col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>b_tile_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> b_tile_col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">__syncthreads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> BK<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> m <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>As_cache<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>As<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>ty <span class=\"token operator\">+</span> m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> n <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>Bs_cache<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>Bs<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>tx <span class=\"token operator\">+</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                accum<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> As_cache<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> Bs_cache<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    write_idx <span class=\"token operator\">^=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>性能对比如下：</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/kernel-performance/kernel-double-buffer.png\" alt=\"double buffer kernel\"></p>\n<p>使用双缓冲之后，因为避免了多一次的线程同步，性能得到了进一步提升。</p>\n<h3 id=\"避免-shared-memory-bank-conflict\"><a class=\"markdownIt-Anchor\" href=\"#避免-shared-memory-bank-conflict\">#</a> 避免 Shared Memory Bank Conflict</h3>\n<p>经过以上的优化，我们的性能已经非常接近 cuBLAS 的基线了。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/kernel-performance/shared-memory-bank-conflict.png\" alt=\"shared memory bank conflict\"></p>\n<p>但是通过 profiling 可以看到，对共享内存的访问上有 40% 的 Uncoalsced Memory Access。这说明共享内存的访问上存在许多 bank conflict。我们可以使用这篇<a href=\"https://zhuanlan.zhihu.com/p/518857175\">矩阵优化笔记</a> 中的思路来解决这一问题。</p>\n<p>我们在通过 Tile 计算的过程中，计算的都是矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 中的连续区域的值，我们可以通过 interleaved 的方式，进一步对其分块<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>：</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/tile-to-avoid-shared-memory-bank-conflict.png\" alt=\"避免 shared memory bank conflict\"></p>\n<p>对应到代码中，我们从  <code>As</code>  和  <code>Bs</code>  中读取数据时，不再是连续的一整块数据，而是以 4 为单位间隔读取：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> BK<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> mm <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> BM <span class=\"token operator\">&amp;&amp;</span> mm <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> m <span class=\"token operator\">+=</span> block_row_thread <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> mm <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> A_row <span class=\"token operator\">=</span> m <span class=\"token operator\">+</span> threadIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>As_cache<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>mm<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>As<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>A_row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nn <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> BN <span class=\"token operator\">&amp;&amp;</span> nn <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> n <span class=\"token operator\">+=</span> block_col_thread <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> nn <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> B_col <span class=\"token operator\">=</span> n <span class=\"token operator\">+</span> threadIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>Bs_cache<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>nn<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>Bs<span class=\"token punctuation\">[</span>write_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>B_col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>而在写回结果时也要注意对矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 的下标计算：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> TM<span class=\"token punctuation\">;</span> m <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> C_row <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>block_row_thread <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> threadIdx<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> TN<span class=\"token punctuation\">;</span> n <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> C_col <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>block_col_thread <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> threadIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>load_a_cache<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>C_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> C_col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            load_a_cache<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> accum<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> load_a_cache<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            load_a_cache<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> accum<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> load_a_cache<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            load_a_cache<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> accum<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> load_a_cache<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            load_a_cache<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> alpha <span class=\"token operator\">*</span> accum<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> load_a_cache<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">[</span><span class=\"token function\">OFFSET</span><span class=\"token punctuation\">(</span>C_row <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> C_col<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">FETCH_FLOAT4</span><span class=\"token punctuation\">(</span>load_a_cache<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/split-tile-1d-kernel.png\" alt=\"access pattern to avoid shared memory bank conflict\"></p>\n<p><code>m</code>  和  <code>n</code>  除以 4 是因为读取时以 4 个浮点数为一组读取，这 4 个浮点数对应的行是相邻的，每 4 行之后，就需要跳跃到下一个对应的位置，乘以  <code>(block_row_thread * 4)</code>  和  <code>(block_col_thread * 4)</code>  即是为此。</p>\n<p>在行和列上分别有  <code>block_row_thread</code>  和  <code>block_col_thread</code>  个线程，那么当前线程下一次操作的数据的行和列的起始位置就是  <code>(m / 4) * (block_row_thread * 4)</code>  和  <code>(n / 4) * (block_col_thread * 4)</code> 。</p>\n<p>最后，再添加当前线程自己在行和列上的偏移  <code>threadIdx.y * 4</code>  和  <code>threadIdx.x * 4</code> 。</p>\n<p>对于  <code>n</code>  可以使用  <code>float4</code>  的方式读取和写入，而对于  <code>m</code> ，我们需要再使用一层循环写入相邻的行中。</p>\n<p><img loading=\"lazy\" data-src=\"/images/cuda/SGEMM-optimization/kernel-performance/kernel-share-bank.png\" alt=\"kernel avoid shared memory bank conflict\"></p>\n<p>可以看到，在大矩阵上，现在的性能基本和 cuBLAS 持平了。我们也基本实现了我们的性能优化目标。</p>\n<h3 id=\"寄存器-bank-冲突\"><a class=\"markdownIt-Anchor\" href=\"#寄存器-bank-冲突\">#</a> 寄存器 bank 冲突</h3>\n<p>在处理共享内存 bank 冲突的基础之上，其实还能够进一步考虑处理寄存器的 bank 冲突<sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup><sup class=\"footnote-ref\"><a href=\"#fn4\" id=\"fnref4\">[4]</a></sup>。不过这部分内容过于复杂，需要使用到  <code>SASS</code>  的 CUDA 汇编代码。这里就不去具体实现了，仅在这里记录一下。</p>\n<h2 id=\"性能对比总结\"><a class=\"markdownIt-Anchor\" href=\"#性能对比总结\">#</a> 性能对比总结</h2>\n<p>这里以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4096</mn><mo>×</mo><mn>4096</mn></mrow><annotation encoding=\"application/x-tex\">4096\\times 4096</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">4096</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4096</span></span></span></span> 大小矩阵的性能总结各个优化和 cuBLAS 库的性能比较。</p>\n<table>\n<thead>\n<tr>\n<th>Kernel</th>\n<th>Ratio to cuBLAS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cublas</td>\n<td>1</td>\n</tr>\n<tr>\n<td>naive</td>\n<td>0.106</td>\n</tr>\n<tr>\n<td>shared memory</td>\n<td>0.091</td>\n</tr>\n<tr>\n<td>tile 1d</td>\n<td>0.158</td>\n</tr>\n<tr>\n<td>tile 2d</td>\n<td>0.352</td>\n</tr>\n<tr>\n<td>float4</td>\n<td>0.857</td>\n</tr>\n<tr>\n<td>double buffering</td>\n<td>0.912</td>\n</tr>\n<tr>\n<td>avoid shared memory bank conflict</td>\n<td>0.995</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>这次国庆假期前前后后断断续续花费了 5 天完成了这篇优化笔记。前两天几乎全部花在代码编写上，后面三天断断续续完成了文章的内容。为了完成这篇内容，这期间参考了许多的笔记和资料<sup class=\"footnote-ref\"><a href=\"#fn5\" id=\"fnref5\">[5]</a></sup><sup class=\"footnote-ref\"><a href=\"#fn6\" id=\"fnref6\">[6]</a></sup><sup class=\"footnote-ref\"><a href=\"#fn7\" id=\"fnref7\">[7]</a></sup>，最后总算也得到了一个很好的优化结果。之前一直都是单纯的资料阅读，这次的实践确实收获颇丰，自己动手编写代码和直接调用别人的接口感觉确实有很大不同。CUDA 编程也需要了解更多的硬件相关的知识，这次实践中也了解了不少。“纸上得来终觉浅，绝知此事要躬行”。后续可能进一步考虑学习其他深度学习的重要算子的优化。</p>\n<p>本次的代码放在我的<a href=\"https://github.com/YangLinzhuo/cuda-sgemm-optimization/tree/main\">仓库</a>上了，可供参考。</p>\n<p>以上。</p>\n<h2 id=\"change-log\"><a class=\"markdownIt-Anchor\" href=\"#change-log\">#</a> Change Log</h2>\n<ul>\n<li>2023-10-14：补充 Nsight Compute profiling 结果，修正部分文本错误和措辞</li>\n<li>2023-10-15：重绘一些插图</li>\n</ul>\n<h2 id=\"附录\"><a class=\"markdownIt-Anchor\" href=\"#附录\">#</a> 附录</h2>\n<h3 id=\"clion-cuda-编程配置\"><a class=\"markdownIt-Anchor\" href=\"#clion-cuda-编程配置\">#</a> CLion CUDA 编程配置</h3>\n<p>使用 CLion 创建 CUDA 工程， <code>CMakeLists.txt</code>  内容如下：</p>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">cmake_minimum_required</span><span class=\"token punctuation\">(</span><span class=\"token property\">VERSION</span> <span class=\"token number\">3.22</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">project</span><span class=\"token punctuation\">(</span>sgemm LANGUAGES CXX CUDA<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CMAKE_CUDA_STANDARD</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CMAKE_CUDA_FLAGS</span> <span class=\"token string\">\"-O3\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># For debug</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># set(CMAKE_CUDA_FLAGS \"-g -G\")</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># For Nsight Compute Profiling</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># set (CMAKE_CUDA_FLAGS \"$&#123;CMAKE_CUDA_FLAGS&#125; -lineinfo\")</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">find_package</span><span class=\"token punctuation\">(</span>CUDAToolkit REQUIRED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_NAME</span><span class=\"token punctuation\">&#125;</span> main.cu</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        src/utils.cu</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        src/kernels.cu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 可执行文件输出路径</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># https://gist.github.com/gavinb/c993f71cf33d2354515c4452a3f8ef30</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">EXECUTABLE_OUTPUT_PATH</span> <span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_SOURCE_DIR</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">set_target_properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_NAME</span><span class=\"token punctuation\">&#125;</span> <span class=\"token namespace\">PROPERTIES</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token property\">CUDA_SEPARABLE_COMPILATION</span> <span class=\"token boolean\">ON</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 查询 compute capability https://developer.nvidia.com/cuda-gpus</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">set_target_properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_NAME</span><span class=\"token punctuation\">&#125;</span> <span class=\"token namespace\">PROPERTIES</span> CUDA_ARCHITECTURES <span class=\"token string\">\"86\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 配置头文件搜索路径</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 配置 CUDA 相关库头文件</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 参考</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># https://stackoverflow.com/questions/51756562/obtaining-the-cuda-include-dir-in-c-targets-with-native-cuda-support-cmake</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">target_include_directories</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_NAME</span><span class=\"token punctuation\">&#125;</span> <span class=\"token namespace\">PRIVATE</span> <span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">target_include_directories</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_NAME</span><span class=\"token punctuation\">&#125;</span> <span class=\"token namespace\">PUBLIC</span> <span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_SOURCE_DIR</span><span class=\"token punctuation\">&#125;</span>/src<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># link cudart cublas</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">target_link_libraries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_NAME</span><span class=\"token punctuation\">&#125;</span> <span class=\"token namespace\">PRIVATE</span> <span class=\"token inserted class-name\">CUDA::cublas</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>此外，需要在  <code>Settings -&gt; Build,Execution,Deployment -&gt; CMake</code>  中的  <code>CMake options</code>  中添加以下参数：</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>-DCMAKE_CUDA_COMPILER=/usr/local/cuda/bin/nvcc</pre></td></tr></table></figure><h3 id=\"cublas-库接口调用\"><a class=\"markdownIt-Anchor\" href=\"#cublas-库接口调用\">#</a> cuBLAS 库接口调用</h3>\n<p>使用  <code>cuBLAS</code>  的矩阵乘法接口  <code>cublasSgemm</code>  函数时，需要注意其参数传递<sup class=\"footnote-ref\"><a href=\"#fn8\" id=\"fnref8\">[8]</a></sup>。</p>\n<p>具体的封装参考如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test_cublas</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">cublasHandle_t</span> handle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> M<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> N<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> K<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                 <span class=\"token keyword\">float</span> alpha<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>A<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>B<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> beta<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>C<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">//cublas 列主序计算：https://www.cnblogs.com/cuancuancuanhao/p/7763256.html</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">cublasSgemm</span><span class=\"token punctuation\">(</span>handle<span class=\"token punctuation\">,</span> CUBLAS_OP_N<span class=\"token punctuation\">,</span> CUBLAS_OP_N<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>alpha<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>beta<span class=\"token punctuation\">,</span> C<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"cuda-程序性能-profiling\"><a class=\"markdownIt-Anchor\" href=\"#cuda-程序性能-profiling\">#</a> CUDA 程序性能 Profiling</h3>\n<p>CUDA 性能 profiling 可以去官网<sup class=\"footnote-ref\"><a href=\"#fn9\" id=\"fnref9\">[9]</a></sup>下载 Nsight Compute 和 Nsight System 工具。其中 System 用于粗粒度的性能分析，Compute 用于对核函数的细粒度性能分析。</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>实际上，对于非 4 的倍数的元素个数，也是可以使用  <code>float4</code>  来访存的，但是在边界条件判断上需要更细致的处理，对性能也会有一定的影响。 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>图片来自于这篇知乎的<a href=\"https://zhuanlan.zhihu.com/p/518857175\">矩阵优化笔记</a> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p><a href=\"http://zh0ngtian.tech/posts/96744e8c.html\">CUDA 知识点：bank 冲突 | CUDA - zhongtian’s blog (zh0ngtian.tech)</a> <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn4\" class=\"footnote-item\"><p><a href=\"https://zhuanlan.zhihu.com/p/481600052\">深入浅出 GPU 优化系列：GEMM 优化（三） - 知乎 (zhihu.com)</a> <a href=\"#fnref4\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn5\" class=\"footnote-item\"><p><a href=\"https://zhuanlan.zhihu.com/p/518857175\">CUDA SGEMM 矩阵乘法优化笔记 —— 从入门到 cublas - 知乎 (zhihu.com)</a> <a href=\"#fnref5\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn6\" class=\"footnote-item\"><p><a href=\"https://github.com/wangzyon/NVIDIA_SGEMM_PRACTICE\">wangzyon/NVIDIA_SGEMM_PRACTICE: Step-by-step optimization of CUDA SGEMM (github.com)</a> <a href=\"#fnref6\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn7\" class=\"footnote-item\"><p><a href=\"https://siboehm.com/articles/22/CUDA-MMM\">How to Optimize a CUDA Matmul Kernel for cuBLAS-like Performance: a Worklog (siboehm.com)</a> <a href=\"#fnref7\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn8\" class=\"footnote-item\"><p><a href=\"https://www.cnblogs.com/cuancuancuanhao/p/7763256.html\">有关 CUBLAS 中的矩阵乘法函数 - 爨爨爨好 - 博客园 (cnblogs.com)</a> <a href=\"#fnref8\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn9\" class=\"footnote-item\"><p><a href=\"https://developer.nvidia.com/gameworksdownload#?dn=nsight-systems-2023-3\">Gameworks Download Center | NVIDIA Developer</a> <a href=\"#fnref9\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "Computer-Science",
                "Algorithm",
                "CUDA"
            ]
        },
        {
            "id": "https://linn-ylz.com/Computer-Science/Python/python-type-annotations-and-custom-types/",
            "url": "https://linn-ylz.com/Computer-Science/Python/python-type-annotations-and-custom-types/",
            "title": "Python 类型注释及自定义类型",
            "date_published": "2023-06-22T02:39:47.000Z",
            "content_html": "<p><code>Python</code>  以其动态特性而受到许多开发者的欢迎。但是当工程项目变得越来越复杂的时候，这一特性又往往会使得开发者头疼不已。想一想，当看着一段代码，却无法确定其中变量的特定类型，无法下手编写代码。即便强行编写完成也只能在运行时检查是否出错，这无疑会对开发效率产生很大影响。</p>\n<h2 id=\"类型系统\"><a class=\"markdownIt-Anchor\" href=\"#类型系统\">#</a> 类型系统</h2>\n<p>按照一般的分类形式， <code>Python</code>  属于动态的强类型系统的编程语言。此外， <code>Python</code>  还支持 Duck Typing 这一特性。</p>\n<p>所谓的 Duck Typing，即：</p>\n<blockquote>\n<p>If it walks like a duck and it quacks like a duck, then it must be a duck.</p>\n</blockquote>\n<p>翻译成计算机语言，就是，加入某个变量支持 A 类型的所有操作，那么我们就可以将其视为 A 类型的变量。我们可以看这样一段代码：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Iterable  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">print_items</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">:</span> Iterable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> items<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>print_items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>print_items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>print_items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>上述的  <code>print_items</code>  函数，只要输入的  <code>items</code>  支持  <code>__iter__</code>  操作，就能够成功调用该函数。即只要支持了  <code>__iter__</code>  操作，我们就可以将  <code>items</code>  视为  <code>Iterable</code>  类型的变量。这里按照语法  <code>&lt;var&gt;: &lt;type&gt;</code>  标注的  <code>Iterable</code>  类型即  <code>Python</code>  中的一种类型注释，用于帮助开发者更方便地理解代码，并且可以通过静态类型检查工具来检查潜在的类型错误。具体细节将在本文后续内容中介绍。</p>\n<p>虽然 Duck Typing 的特性非常便利，但是它是一把双刃剑：</p>\n<ul>\n<li>Duck Typing 可以增加代码的健壮性，可以通过构建抽象类接口来支持多种类型变量的调用，不需要针对某个类型编写特定代码。</li>\n<li>但是如果滥用 Duck Typing，某些时候可能会使开发者迷惑，因为支持的某些操作可能并不符合直觉。</li>\n</ul>\n<h2 id=\"类型注释\"><a class=\"markdownIt-Anchor\" href=\"#类型注释\">#</a> 类型注释</h2>\n<p><code>Python</code>  的动态类型在编写小规模代码时非常方便，但是当代码规模变大后，就很难知晓某段复杂代码中变量的类型，只有在运行时才能够知道其类型。对于这点， <code>Python</code>  之父 Guido van Rossum 曾经说过：</p>\n<blockquote>\n<p>I’ve learned a painful lesson that for small programs dynamic typing is great. For large programs you have to have a more disciplined approach and it helps if the language actually gives you that discipline, rather than telling you “Well, you can do whatever you want.”</p>\n</blockquote>\n<p>为了帮助解决这一困扰许多开发者的问题， <code>Python</code>  从 3.7 开始提供了较为完备的类型支持系统。</p>\n<p><code>Python</code>  的类型注释（Type Annotations），是一种类型提示（Type Hints），用于提示开发者某种变量的具体类型。其语法如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">find_workers_available_for_time</span><span class=\"token punctuation\">(</span>open_time<span class=\"token punctuation\">:</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr></table></figure><p>对于通常的变量定义，也可以添加类型注释：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>number<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>text<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"useless\"</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>values<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.0</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>worker<span class=\"token punctuation\">:</span> Worker <span class=\"token operator\">=</span> Worker<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在  <code>Python 3.8</code>  之前，上述代码可能会报错，需要在代码开头添加  <code>from __future__ import anntations</code>  语句。如果是更老版本的  <code>Python</code> ，可以通过以下方式添加类型注释：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ratio <span class=\"token operator\">=</span> get_ratio<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># type: float  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_workers</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># type: (datetime.datetime) -> List[str]</span></pre></td></tr></table></figure><p>但是这种方式过于繁琐，可读性也不强，推荐使用较新版本的  <code>Python</code> 。</p>\n<p>许多人可能担心这些额外的代码会影响运行性能，但其实不必在意，因为这些代码并不会实际运行。</p>\n<p>除了提示开发者变量的代码类型之外，类型注释还能够帮助 IDE 提供自动补全功能。还可以此借助  <code>mypy</code>  等 Typechecker 来帮助检查代码的正确性。</p>\n<p>虽然类型注释有很多好处，但是我们也不需要处处使用。对于简单的代码，过多的类型注释反而会影响对实际代码的阅读。</p>\n<h2 id=\"复杂类型\"><a class=\"markdownIt-Anchor\" href=\"#复杂类型\">#</a> 复杂类型</h2>\n<p>在上一节中的类型注释，都是由  <code>Python</code>  中的基础类型构成的。本节介绍一些其他类型以构建更复杂的类型注释。</p>\n<h3 id=\"optional\"><a class=\"markdownIt-Anchor\" href=\"#optional\">#</a>  <code>Optional</code></h3>\n<p><code>Python</code>  中的变量可以动态绑定，都可以赋值为  <code>None</code> 。为了能够在类型中表示这一点，可以使用  <code>Optional</code>  这一类型。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Optional  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>maybe_a_string<span class=\"token punctuation\">:</span> Optional<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdef\"</span> <span class=\"token comment\"># This has a value  </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>maybe_a_string<span class=\"token punctuation\">:</span> Optional<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span> <span class=\"token comment\"># This is the absence of a value</span></pre></td></tr></table></figure><p><code>Optional</code>  能够提示这一变量有可能是  <code>None</code>  类型。能够帮助区分空值和  <code>None</code> 。</p>\n<h3 id=\"union\"><a class=\"markdownIt-Anchor\" href=\"#union\">#</a>  <code>Union</code></h3>\n<p><code>Union</code>  用于表示一系列独立类型的并集。例如， <code>Union[int, str]</code>  表示某个变量可能是  <code>int</code>  或  <code>str</code>  中的一种。此外， <code>Union[int, None]</code>  和  <code>Optional[int]</code>  在表示上是等价的。</p>\n<h3 id=\"literal\"><a class=\"markdownIt-Anchor\" href=\"#literal\">#</a>  <code>Literal</code></h3>\n<p><code>Literal</code>  类型可以限制某些类型的取值范围。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Literal  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token decorator annotation punctuation\">@dataclass</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    error_code<span class=\"token punctuation\">:</span> Literal<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    disposed_of<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token decorator annotation punctuation\">@dataclass</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Snack</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    name<span class=\"token punctuation\">:</span> Literal<span class=\"token punctuation\">[</span><span class=\"token string\">\"Pretzel\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hot Dog\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Veggie Burger\"</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    condiments<span class=\"token punctuation\">:</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">[</span>Literal<span class=\"token punctuation\">[</span><span class=\"token string\">\"Mustard\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ketchup\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><div class=\"note info\">\n<p><code>Literal</code>  在 Python 3.8 引入。They are a little more lightweight than Python enumerations. 比枚举略轻量。</p>\n</div>\n<h3 id=\"annotated\"><a class=\"markdownIt-Anchor\" href=\"#annotated\">#</a>  <code>Annotated</code></h3>\n<p><code>Literal</code>  仅能够限定某些基本的类型，提供基本限制。无法提供像 “特定长度的字符串”，“匹配特定正则表达式的字符串” 等类型限制。</p>\n<p>在这些情形下，可以使用  <code>Annotated</code>  类型实现。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x<span class=\"token punctuation\">:</span> Annotated<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> ValueRange<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>y<span class=\"token punctuation\">:</span> Annotated<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> MatchesRegex<span class=\"token punctuation\">(</span><span class=\"token string\">'[0-9]&#123;4&#125;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>不过，Typechecker 无法帮助我们检查这一类型的错误，因为类型过于复杂，无法通过静态分析得到结果。因此，我们仍然需要自行在代码中对输入做检查。这样能够使得变量类型取值范围更加明晰，使代码更清晰。</p>\n<h3 id=\"newtype\"><a class=\"markdownIt-Anchor\" href=\"#newtype\">#</a>  <code>NewType</code></h3>\n<p><code>NewType</code>  能够帮助提供更复杂的类型表达。 <code>NewType</code>  会基于已有类型创建一个新的类型，并拥有和已有类型相同的 fields 和 methods。尽管如此，这个新创建的类型和原类型是无法互换的。</p>\n<p>可以看以下的例子：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> NewType  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">HotDog</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token triple-quoted-string string\">''' Used to represent an unservable hot dog'''</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># ... snip hot dog class implementation ...  </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ReadyToServeHotDog <span class=\"token operator\">=</span> NewType<span class=\"token punctuation\">(</span><span class=\"token string\">\"ReadyToServeHotDog\"</span><span class=\"token punctuation\">,</span> HotDog<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dispense_to_customer</span><span class=\"token punctuation\">(</span>hot_dog<span class=\"token punctuation\">:</span> ReadyToServeHotDog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\"># ...</span></pre></td></tr></table></figure><p>代码中  <code>ReadyToServeHotDog</code>  和  <code>HotDog</code>  是不等价的。在要求了  <code>ReadyToServeHotDog</code>  的时候，传递  <code>HotDog</code>  是不可行的，但是反过来是可以的。</p>\n<p>与此同时，我们需要提供一个类型转换方式，否则开发者不知道该如何得到这一新类型的对象。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">prepare_for_serving</span><span class=\"token punctuation\">(</span>hot_dog<span class=\"token punctuation\">:</span> HotDog<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> ReadyToServeHotDog<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> hot_dog<span class=\"token punctuation\">.</span>is_plated<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hot dog should not already be plated\"</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    hot_dog<span class=\"token punctuation\">.</span>put_on_plate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    hot_dog<span class=\"token punctuation\">.</span>add_napkins<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> ReadyToServeHotDog<span class=\"token punctuation\">(</span>hot_dog<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">make_snack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    serve_to_customer<span class=\"token punctuation\">(</span>ReadyToServeHotDog<span class=\"token punctuation\">(</span>HotDog<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这样一来，所有的  <code>ReadyToServeHotDog</code>  在创建时都会检查是否满足了特定的条件，保证了我们调用函数的正确性。这种函数称为 blessed function。我们需要告诉开发者，在任何时候，只能使用这些 blessed function 来创建我们构造的新类型。不过目前只有使用注释这种方法，暂时没有其他有效手段能够显式提醒开发者。</p>\n<p>实际上，我们可以通过创造新的  <code>class</code>  来实现类似的效果，也能够提供更有效地防止非法值类型的传入。但是相对而言， <code>NewType</code>  的实现更加轻量。</p>\n<p>需要注意， <code>NewType</code>  和类型别名不是一回事。类型别名和原类型是完全等价的，在任意时刻，语义上可以等价互换。但是  <code>NewType</code>  不是。</p>\n<p>例如  <code>IdOrName = Union[str, int]</code> ， <code>IdOrName</code>  和  <code>Union[str, int]</code>  类型是等价的。类型别名在表示某些复杂嵌套类型的时候比较直观，比如  <code>IDOrNameLookup</code>  显然比  <code>Union[dict[int, User], list[dict[str, User]]]</code>  更直观。</p>\n<h3 id=\"final\"><a class=\"markdownIt-Anchor\" href=\"#final\">#</a>  <code>Final</code></h3>\n<p><code>Final</code>  类型在 Python 3.8 中引入，该类型的值在赋值之后就无法再绑定到其他内容上。</p>\n<p>例如，我们定义的品牌的名称，不会轻易修改：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>VENDOR_NAME<span class=\"token punctuation\">:</span> Final<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Viafore's Auto-Dog\"</span></pre></td></tr></table></figure><p>如果开发者后续错误地尝试修改其内容，Typechecker 会报错：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">display_vendor_information</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    vendor_info <span class=\"token operator\">=</span> <span class=\"token string\">\"Auto-Dog v1.0\"</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># whoops, copy-paste error, this code should be vendor_info += VENDOR_NAME  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    VENDOR_NAME <span class=\"token operator\">+=</span> VENDOR_NAME  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>vendor_info<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>但是需要注意， <code>Final</code>  和  <code>C++</code>  中的  <code>const</code>  类型是不同的，因为 Python 并不限制通过函数修改对象的内容，它仅仅限制了将某个变量绑定到其他对象上。</p>\n<h2 id=\"容器类型\"><a class=\"markdownIt-Anchor\" href=\"#容器类型\">#</a> 容器类型</h2>\n<p>除了对一般的  <code>int</code>  等基础类型之外， <code>Python</code>  中还常用  <code>list</code> 、 <code>dict</code> 、 <code>set</code>  等容器类型。相比于单个值类型的变量，其类型注释要更加复杂。</p>\n<p>看以下例子：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">create_author_count_mapping</span><span class=\"token punctuation\">(</span>cookbooks<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    counter <span class=\"token operator\">=</span> defaultdict<span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> book <span class=\"token keyword\">in</span> cookbooks<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        counter<span class=\"token punctuation\">[</span>book<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> counter</pre></td></tr></table></figure><p>尽管我们知道输入是一个  <code>list</code> ，输出是一个  <code>dict</code> ，但是我们仍然不清楚其中对象的具体类型。</p>\n<p>我们可以为容器中的对象添加类型说明：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>AuthorToCountMapping <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">create_author_count_mapping</span><span class=\"token punctuation\">(</span>cookbooks<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>Cookbook<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AuthorToCountMapping<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    counter <span class=\"token operator\">=</span> defaultdict<span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> book <span class=\"token keyword\">in</span> cookbooks<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        counter<span class=\"token punctuation\">[</span>book<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> counter</pre></td></tr></table></figure><p>这里，使用类型别名表示返回值的类型，在此处的上下文语境中能更加清楚地表明代码的意图。</p>\n<h3 id=\"同构数据-vs-异构数据\"><a class=\"markdownIt-Anchor\" href=\"#同构数据-vs-异构数据\">#</a> 同构数据 vs. 异构数据</h3>\n<p>在表示容器中的对象类型时，我们经常会遇到一个问题：如果容器中的对象类型并不总是一致的，我们该如何表示其类型？</p>\n<p>我们可以将容器分为 homogeneous collections（同构容器） 和 heterogeneous collections（异构容器） 两种类型，按其中元素类型是否一致来区分。</p>\n<p>在一般情况下，我们应当尽量使用同构容器，因为异构容器经常需要我们处理 special case，这很容易出错。同构容器不一定说明其中的元素是同一种原生类型等情形，只要我们能够对其使用完全相同的操作，那么就可以认定这些元素是同构的。</p>\n<p>对于异构容器，我们可以使用  <code>Union</code>  表示其中的元素类型：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Ingredient <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># (name, quantity, units)  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Recipe <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>Union<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> Ingredient<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># the list can be servings or ingredients  </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">adjust_recipe</span><span class=\"token punctuation\">(</span>recipe<span class=\"token punctuation\">:</span> Recipe<span class=\"token punctuation\">,</span> servings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># ...</span></pre></td></tr></table></figure><p>如果异构容器中的类型过于复杂，我们很可能需要添加很多的类型检验代码。这时，使用一个自定义的  <code>class</code>  类型可能更加合适。</p>\n<p>如果容器中的元素类型过多，我们还可以用  <code>Any</code>  表示任意一种类型。这样，任意一种类型都是合法的。只是这样就无法再提供任何有效的参考信息。</p>\n<p>不过，对于  <code>tuple</code> ，其中的元素类型经常是异构的。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Cookbook <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># name, page count</span></pre></td></tr></table></figure><p>当然，这样的代码很容易变得难懂。因为我们需要比照每个索引对应的元素内容的含义。我们可以用  <code>dict</code>  来替换：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>food_lab <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"The Food Lab\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">\"page_count\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">958</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>但是如此一来， <code>dict</code>  中的键值会映射到不同的类型上。我们需要用  <code>dict[str, Union[int, str]]</code>  来表示该  <code>dict</code>  的类型。</p>\n<p>对于这种复杂类型的字典，推荐用  <code>TypedDict</code> 。</p>\n<h3 id=\"typeddict\"><a class=\"markdownIt-Anchor\" href=\"#typeddict\">#</a>  <code>TypedDict</code></h3>\n<p><code>TypedDict</code>  在 Python 3.8 中引入。用于必须在字典中存储异构类型数据的情形。</p>\n<p>对于  <code>Json</code>   <code>YAML</code>  等文件解析得到的  <code>dict</code> ，其中的数据通常都是异构的。如果我们控制了  <code>dict</code>  的创建，那么我们可以使用  <code>dataclass</code>  或者  <code>class</code>  来管理这些数据。对于解析文件得到的内容，我们仍需要通过查看文档等方法来确认。</p>\n<p>我们可以用  <code>TypedDict</code>  来解决这一问题。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> TypedDict  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Range</span><span class=\"token punctuation\">(</span>TypedDict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token builtin\">min</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token builtin\">max</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">NutritionInformation</span><span class=\"token punctuation\">(</span>TypedDict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    unit<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    confidenceRange95Percent<span class=\"token punctuation\">:</span> Range  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    standardDeviation<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">RecipeNutritionInformation</span><span class=\"token punctuation\">(</span>TypedDict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    recipes_used<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    calories<span class=\"token punctuation\">:</span> NutritionInformation  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    fat<span class=\"token punctuation\">:</span> NutritionInformation  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    protein<span class=\"token punctuation\">:</span> NutritionInformation  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    carbs<span class=\"token punctuation\">:</span> NutritionInformation</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>nutrition_information<span class=\"token punctuation\">:</span>RecipeNutritionInformation <span class=\"token operator\">=</span> \\  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    get_nutrition_from_spoonacular<span class=\"token punctuation\">(</span>recipe_name<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>上述代码很清晰的表示了字典中的键值对类型。当字典类型发生了变化时，我们可以通过  <code>mypy</code>  帮助检查。如果我们忘记更新该  <code>TypedDict</code> ， <code>mypy</code>  能够帮助我们找出错误。</p>\n<h3 id=\"构建新的容器类型\"><a class=\"markdownIt-Anchor\" href=\"#构建新的容器类型\">#</a> 构建新的容器类型</h3>\n<h4 id=\"generics\"><a class=\"markdownIt-Anchor\" href=\"#generics\">#</a>  <code>Generics</code></h4>\n<p>如果确实现有类型无法表达我们想要的内容，我们可以通过  <code>Generics</code>  帮助构建新的容器类型。</p>\n<p>Generic 类型通常表示我们不关心其中的具体类型，但是它能够帮助我们限制用户使用不正确的类型。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>coll<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> coll<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>对于  <code>reverse</code>  函数，我们不关系其中的具体类型，但是我们知道返回的列表和传入的列表的值类型是相同的。我们可以这样表示：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> TypeVar  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>T <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">'T'</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>coll<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>T<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>T<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> coll<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>这样，一个  <code>int</code>  类型的  <code>list</code>  就绝不会产生一个  <code>str</code>  类型的  <code>list</code>  的了。</p>\n<p>基于此方式，我们可以表达更复杂的类型：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> defaultdict  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Generic<span class=\"token punctuation\">,</span> TypeVar</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Node <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">\"Node\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Edge <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">\"Edge\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># directed graph  </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Graph</span><span class=\"token punctuation\">(</span>Generic<span class=\"token punctuation\">[</span>Node<span class=\"token punctuation\">,</span> Edge<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span>Node<span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>Edge<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">add_relation</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">:</span> Node<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> Edge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        self<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_relations</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">:</span> Node<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>Edge<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>这样，我们可以使用  <code>Graph</code>  表示更丰富的类型：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cookbooks<span class=\"token punctuation\">:</span> Graph<span class=\"token punctuation\">[</span>Cookbook<span class=\"token punctuation\">,</span> Cookbook<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Graph<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>recipes<span class=\"token punctuation\">:</span> Graph<span class=\"token punctuation\">[</span>Recipe<span class=\"token punctuation\">,</span> Recipe<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Graph<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cookbook_recipes<span class=\"token punctuation\">:</span> Graph<span class=\"token punctuation\">[</span>Cookbook<span class=\"token punctuation\">,</span> Recipe<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Graph<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>recipes<span class=\"token punctuation\">.</span>add_relation<span class=\"token punctuation\">(</span>Recipe<span class=\"token punctuation\">(</span><span class=\"token string\">'Pasta Bolognese'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                    Recipe<span class=\"token punctuation\">(</span><span class=\"token string\">'Pasta with Sausage and Basil'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cookbook_recipes<span class=\"token punctuation\">.</span>add_relation<span class=\"token punctuation\">(</span>Cookbook<span class=\"token punctuation\">(</span><span class=\"token string\">'The Food Lab'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                            Recipe<span class=\"token punctuation\">(</span><span class=\"token string\">'Pasta Bolognese'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>Generic</code>  能够让我们复用更多的代码，减少错误的出现。</p>\n<p><code>Generic</code>  的其他用途：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_nutrition_info</span><span class=\"token punctuation\">(</span>recipe<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Union<span class=\"token punctuation\">[</span>NutritionInfo<span class=\"token punctuation\">,</span> APIError<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># ...  </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_ingredients</span><span class=\"token punctuation\">(</span>recipe<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Union<span class=\"token punctuation\">[</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>Ingredient<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> APIError<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#...  </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_restaurants_serving</span><span class=\"token punctuation\">(</span>recipe<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Union<span class=\"token punctuation\">[</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>Restaurant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> APIError<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># ...</span></pre></td></tr></table></figure><p>显然，上述方式需要我们在每个返回值中都添加一个  <code>APIError</code>  类型，非常繁琐。我们可以这样改写：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>T <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">\"T\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>APIResponse <span class=\"token operator\">=</span> Union<span class=\"token punctuation\">[</span>T<span class=\"token punctuation\">,</span> APIError<span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_nutrition_info</span><span class=\"token punctuation\">(</span>recipe<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> APIResponse<span class=\"token punctuation\">[</span>NutritionInfo<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># ...  </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_ingredients</span><span class=\"token punctuation\">(</span>recipe<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> APIResponse<span class=\"token punctuation\">[</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>Ingredient<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">#...  </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_restaurants_serving</span><span class=\"token punctuation\">(</span>recipe<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> APIResponse<span class=\"token punctuation\">[</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>Restaurant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># ...</span></pre></td></tr></table></figure><h3 id=\"修改现有类型\"><a class=\"markdownIt-Anchor\" href=\"#修改现有类型\">#</a> 修改现有类型</h3>\n<p>有些时候，我们可以在现有类型的基础上修改，以实现我们想要的效果。假定我们想要让字典支持别名，即不同的  <code>key</code>  能够指向相同的  <code>value</code> 。如果复制多个  <code>value</code>  的话，在修改时容易漏掉其他对应  <code>key</code>  的修改。这时，我们可以通过创建  <code>dict</code>  的子类来实现以上效果。</p>\n<p>以上需求，我们可以创建一个  <code>dict</code>  的子类来实现：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">NutritionalInformation</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__getitem__<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">except</span> KeyError<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">pass</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> alias <span class=\"token keyword\">in</span> get_aliases<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__getitem__<span class=\"token punctuation\">(</span>alias<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">except</span> KeyError<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">pass</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">raise</span> KeyError<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Could not find </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>key<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> or any of its aliases\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>但是，以上的代码实现存在问题。当我们继承一个  <code>dict</code>  的时候，我们无法保证内部函数会调用我们覆盖的函数实现。内置类型的许多函数使用内联代码调用来保证性能。如果只是添加额外的方法，那么继承内置类型是可行的。但是在将来，也有可能发生类似的错误，因此最好避免继承内置类型。</p>\n<p>为了解决这一问题，我们可以使用  <code>UserDict</code> ：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> UserDict  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">NutritionalInformation</span><span class=\"token punctuation\">(</span>UserDict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">except</span> KeyError<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">pass</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> alias <span class=\"token keyword\">in</span> get_aliases<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>alias<span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">except</span> KeyError<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">pass</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">raise</span> KeyError<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Could not find </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>key<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> or any of its aliases\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>我们可以使用  <code>self.data</code>  来获取底层的原生  <code>dict</code>  数据。除此之外，还有  <code>UserList</code>  和  <code>UserString</code>  可以帮助我们对  <code>list</code>  和  <code>str</code>  实现类似的代码。不过需要注意，这些  <code>User*</code>  类型可能会带来一定的性能损耗，需要根据实际情况考虑。</p>\n<h3 id=\"抽象类型\"><a class=\"markdownIt-Anchor\" href=\"#抽象类型\">#</a> 抽象类型</h3>\n<p>通过定义抽象类，我们可以自定义容器类型。 <code>collection.abc</code>  中提供了许多的抽象基类，我们可以根据需求使用。</p>\n<p>上一节中，我们提到了  <code>UserDict</code>   <code>UserList</code>   <code>UserString</code> ，但是并没有  <code>UserSet</code> 。本节我们基于  <code>abc</code>  来实现。</p>\n<p><code>collections.abc.Set</code>  提供了  <code>set</code>  的抽象基类定义。其中包含以下函数：</p>\n<ul>\n<li><code>__contains__</code> ：检查是否包含某个元素</li>\n<li><code>__iter__</code> ：用于迭代元素</li>\n<li><code>__len__</code> ：返回容器中的元素个数</li>\n</ul>\n<p>只要我们实现了以上三个函数，我们就可以实现一个类似的  <code>set</code> 。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> collections  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">AliasedIngredients</span><span class=\"token punctuation\">(</span>collections<span class=\"token punctuation\">.</span>abc<span class=\"token punctuation\">.</span>Set<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> ingredients<span class=\"token punctuation\">:</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        self<span class=\"token punctuation\">.</span>ingredients <span class=\"token operator\">=</span> ingredients  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__contains__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> value <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>ingredients <span class=\"token keyword\">or</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span>alias <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>ingredients <span class=\"token keyword\">for</span> alias <span class=\"token keyword\">in</span> get_aliases<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__iter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>ingredients<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>ingredients<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> ingredients <span class=\"token operator\">=</span> AliasedIngredients<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'arugula'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'eggplant'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pepper'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> ingredient <span class=\"token keyword\">in</span> ingredients<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ingredient<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token string\">'arugula'</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token string\">'eggplant'</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token string\">'pepper'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ingredients<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">3</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'arugula'</span> <span class=\"token keyword\">in</span> ingredients<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token boolean\">True</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rocket'</span> <span class=\"token keyword\">in</span> ingredients<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token boolean\">True</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>ingredients <span class=\"token operator\">|</span> AliasedIngredients<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'garlic'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'pepper'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'arugula'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'eggplant'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'garlic'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>除此之外，我们还可以用  <code>abc</code>  来提供类型注释：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">print_items</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">:</span> collections<span class=\"token punctuation\">.</span>abc<span class=\"token punctuation\">.</span>Iterable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> items<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>只要对象支持  <code>__iter__</code>  方法，那么就符合这个函数的参数要求。我们可以通过 ABC 来定义更复杂的参数类型。也是 Duck Type 的关键实现。</p>\n<p>Python 3.9 提供了 25 中不同的抽象基类。可以查看<a href=\"https://docs.python.org/3/library/collections.abc.html#module-collections.abc\">文档</a>了解<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>。</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://docs.python.org/3/library/collections.abc.html#module-collections.abc\">collections.abc — Abstract Base Classes for Containers — Python 3.11.4 documentation</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "Computer-Science",
                "Python",
                "Type-Annotation"
            ]
        },
        {
            "id": "https://linn-ylz.com/Computer-Science/Configs/powershell-configs/",
            "url": "https://linn-ylz.com/Computer-Science/Configs/powershell-configs/",
            "title": "Powershell 配置",
            "date_published": "2023-04-01T07:44:34.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>虽然目前  <code>Windows</code>  对  <code>WSL</code>  已经支持很多常规的操作，但是有时候仍然不得不在  <code>Windows</code>  环境下执行某些命令。尤其  <code>WSL</code>  的文件  <code>IO</code>  速率相比于原生  <code>Windows</code>  系统存在一定差距，尤其是  <code>Git</code>  仓库稍微大一点便能明显感受到延迟。此外， <code>WSL</code>  的网络代理有时候也会出现故障， <code>Git</code>  操作很不方便。因此，基于  <code>Powershell</code>  配置一些支持常用操作，能够更方便自己的开发。</p>\n<h2 id=\"升级\"><a class=\"markdownIt-Anchor\" href=\"#升级\">#</a> 升级</h2>\n<p>由于需要使用到一些模块，因此需要首先升级系统的  <code>Powershell</code>  ， <code>Windows</code>  官方提供了多种可选方式升级或安装最新的  <code>Powershell</code> ，参见<a href=\"https://learn.microsoft.com/zh-cn/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.3\">在 Windows 上安装 PowerShell - PowerShell | Microsoft Learn</a>。<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n<p>如果网络状况良好，那么推荐直接使用  <code>winget</code>  命令安装。否则也可以下载  <code>msi</code>  安装包安装。</p>\n<h2 id=\"autosuggestion-工具\"><a class=\"markdownIt-Anchor\" href=\"#autosuggestion-工具\">#</a> Autosuggestion 工具</h2>\n<p><code>WSL</code>  下可以通过  <code>oh-my-zsh</code>  配置  <code>auto-suggestion</code>  工具，可以在输入命令时显示以往使用的命令。 <code>Powershell</code>  也可以配置类似的工具。<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup></p>\n<p>使用该工具需要安装相关依赖：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Install-Module</span> PSReadLine <span class=\"token operator\">-</span>RequiredVersion 2<span class=\"token punctuation\">.</span>1<span class=\"token punctuation\">.</span>0</pre></td></tr></table></figure><p>安装完成后，可以使用以下命令启用 Autosuggestion 功能：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Import-Module</span> PSReadLine</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">Set-PSReadLineOption</span> <span class=\"token operator\">-</span>PredictionSource History</pre></td></tr></table></figure><p>以上命令只在当前窗口有效。如果需要默认启动，需要编辑配置文件。</p>\n<h3 id=\"编辑-powershell-配置文件\"><a class=\"markdownIt-Anchor\" href=\"#编辑-powershell-配置文件\">#</a> 编辑  <code>Powershell</code>  配置文件</h3>\n<p>首先需要检查是否已有配置文件：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Test-path</span> <span class=\"token variable\">$profile</span></pre></td></tr></table></figure><p>如果结果为  <code>True</code> ，说明已经包含该文件。为  <code>False</code> ，则需要自行生成：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">New-item</span> –<span class=\"token function\">type</span> file –force <span class=\"token variable\">$profile</span></pre></td></tr></table></figure><p>执行命令设置执行权限（该命令需要管理员权限）：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Set-ExecutionPolicy</span> RemoteSigned</pre></td></tr></table></figure><p>之后编辑该文件：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>notepad <span class=\"token variable\">$profile</span></pre></td></tr></table></figure><p>将语句添加到该配置文件中：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Import-Module</span> PSReadLine</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">Set-PSReadLineOption</span> <span class=\"token operator\">-</span>PredictionSource History</pre></td></tr></table></figure><p>此外，该工具也支持其他功能：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Shows navigable menu of all options when hitting Tab</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">Set-PSReadlineKeyHandler</span> <span class=\"token operator\">-</span>Key Tab <span class=\"token operator\">-</span><span class=\"token keyword\">Function</span> MenuComplete</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># Autocompletion for arrow keys</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">Set-PSReadlineKeyHandler</span> <span class=\"token operator\">-</span>Key UpArrow <span class=\"token operator\">-</span><span class=\"token keyword\">Function</span> HistorySearchBackward</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">Set-PSReadlineKeyHandler</span> <span class=\"token operator\">-</span>Key DownArrow <span class=\"token operator\">-</span><span class=\"token keyword\">Function</span> HistorySearchForward</pre></td></tr></table></figure><h2 id=\"ls-命令显示高亮\"><a class=\"markdownIt-Anchor\" href=\"#ls-命令显示高亮\">#</a>  <code>ls</code>  命令显示高亮</h2>\n<p><a href=\"https://stackoverflow.com/a/30788506\">https://stackoverflow.com/a/30788506</a></p>\n<p>通过以下命令安装  <code>Color</code>  模块，支持  <code>ls</code>  命令显示高亮<sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Install-Module</span> Color</pre></td></tr></table></figure><p>之后，在配置文件中添加导入模块语句：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Import-Module</span> Color</pre></td></tr></table></figure><h2 id=\"美化\"><a class=\"markdownIt-Anchor\" href=\"#美化\">#</a> 美化</h2>\n<p>类似于  <code>oh-my-zsh</code> ， <code>Powershell</code>  可以使用  <code>oh-my-posh</code>  来美化。</p>\n<p>使用以下命令安装  <code>oh-my-posh</code> ：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>winget install JanDeDobbeleer<span class=\"token punctuation\">.</span>OhMyPosh <span class=\"token operator\">-</span>s winget</pre></td></tr></table></figure><h3 id=\"启用主题\"><a class=\"markdownIt-Anchor\" href=\"#启用主题\">#</a> 启用主题</h3>\n<p>使用以下命令可以激活自己想要的主题：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>oh-my-posh init pwsh <span class=\"token operator\">--</span>config <span class=\"token string\">\"<span class=\"token variable\">$env</span>:POSH_THEMES_PATH/ys.omp.json\"</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Invoke-Expression</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中  <code>ys</code>  是想要启用的主题的名称，终端主题可以在官方网站主题页面查看。<sup class=\"footnote-ref\"><a href=\"#fn4\" id=\"fnref4\">[4]</a></sup></p>\n<p>以上命令也可以加入到  <code>Powershell</code>  的配置文件中。</p>\n<h3 id=\"安装字体\"><a class=\"markdownIt-Anchor\" href=\"#安装字体\">#</a> 安装字体</h3>\n<p>许多主题可能用到了特殊字符，如果终端中出现了方块显示的符号，可以下载官方推荐的 Nerd 字体。<sup class=\"footnote-ref\"><a href=\"#fn5\" id=\"fnref5\">[5]</a></sup></p>\n<p>字体下载网站：<a href=\"https://www.nerdfonts.com/font-downloads\">Nerd Fonts - Iconic font aggregator, glyphs/icons collection, &amp; fonts patcher</a></p>\n<h3 id=\"posh-git-模块\"><a class=\"markdownIt-Anchor\" href=\"#posh-git-模块\">#</a>  <code>posh-git</code>  模块</h3>\n<p>安装  <code>posh-git</code>  模块可以为  <code>oh-my-posh</code>  提供  <code>git</code>  状态显示和命令补全等功能。使用以下命令安装：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Install-Module</span> posh-git</pre></td></tr></table></figure><p>并在配置文件中添加导入语句。</p>\n<p>注意，在某些较大的  <code>Git</code>  仓库中，该模块可能会影响实际的性能，因此可以视情况决定是否启用。</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://learn.microsoft.com/zh-cn/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.3\">在 Windows 上安装 PowerShell - PowerShell | Microsoft Learn</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p><a href=\"https://dev.to/animo/fish-like-autosuggestion-in-powershell-21ec\">Fish-like Autosuggestion in Powershell - DEV Community 👩‍💻👨‍💻</a> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p><a href=\"https://stackoverflow.com/questions/9406434/powershell-properly-coloring-get-childitem-output-once-and-for-all/30788506#30788506\">colors - Powershell: Properly coloring Get-Childitem output once and for all - Stack Overflow</a> <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn4\" class=\"footnote-item\"><p><a href=\"https://ohmyposh.dev/docs/themes\">Themes | Oh My Posh</a> <a href=\"#fnref4\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn5\" class=\"footnote-item\"><p><a href=\"https://www.nerdfonts.com/font-downloads\">Nerd Fonts - Iconic font aggregator, glyphs/icons collection, &amp; fonts patcher</a> <a href=\"#fnref5\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "Computer-Science",
                "Configs",
                "Powershell"
            ]
        },
        {
            "id": "https://linn-ylz.com/Computer-Science/Python/dataclass-and-YAML-transform/",
            "url": "https://linn-ylz.com/Computer-Science/Python/dataclass-and-YAML-transform/",
            "title": "dataclass 与 YAML 的相互转换",
            "date_published": "2022-11-10T15:17:33.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>在许多工程项目中，经常需要配置一些选项供用户或者员工自己使用。以人工智能领域为例， <code>Paddlepaddle</code> 、 <code>mmdetection</code>  等深度学习框架都需要根据需求在配置文件中配置数据、网络等相关参数。 <code>Paddlepaddle</code>  使用  <code>YAML</code>  格式存储配置信息， <code>mmdetection</code>  则直接使用  <code>Python</code>  文件来设定配置。此外， <code>JSON</code>  格式也是常用的数据存储格式。无论何种格式，当配置信息不断增加膨胀之后，如何组织配置的结构就成为了一件迫切需要考虑的事情。</p>\n<p>这三种配置格式孰优孰劣，我无法评价。由于我目前接手的工作中使用的是  <code>YAML</code>  格式的配置文件，因此本文主要介绍最近一段时间经过调研搜索后，我决定采用的一种配置文件组织方案。</p>\n<p>在实际阐述方案之前，有必要阐述一下  <code>YAML</code>  和  <code>dataclass</code>  这两个概念。如果读者对这二者比较熟悉，可以直接跳过相关部分。</p>\n<h2 id=\"yaml-中的-tag\"><a class=\"markdownIt-Anchor\" href=\"#yaml-中的-tag\">#</a>  <code>YAML</code>  中的  <code>tag</code></h2>\n<p><code>YAML</code>  诞生于 2004 年，根据官网说法<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>，其有 7 条设计目标，其中，易读、不同编程语言间良好的兼容性、可扩展等特性使得其被广泛用于存储格式化的信息。</p>\n<p>关于其具体的语法，可以参考<a href=\"https://yaml.org/spec/1.2.2/\">官方网站</a>或者其他<a href=\"https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html\">教程</a>，这里不做过多介绍，本文主要介绍其  <code>tag</code>  标签功能。</p>\n<p><code>tag</code>  可以标注  <code>YAML</code>  中数据的类型或者其归属的对象类别，其可以是  <code>str</code> 、 <code>int</code> 、 <code>float</code>  等基本类型，也可以是用户自己定义的任何有意义的类别名称。这些标签可以帮助我们在阅读或者解析的时候，更方便地判断数据的归属。</p>\n<p>我们不妨来看一个例子：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'linn'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">gender</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'male'</span></pre></td></tr></table></figure><p>在上述  <code>YAML</code>  文件中，我们定义了三个属性，可以很清晰地看到，这三个属性描述的都是个人信息，它们在许多场景下通常会结伴出现。对于这种数据，有一个专门的称呼叫做数据泥团（Data Clumps）<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>。有时候，我们会发现某些函数包含大量的参数，而这些参数往往一起出现，很显然，在通常的编程语言中，用结构体或者类来组织这种数据，比直接使用原生类型是更好的选择。而在  <code>YAML</code>  中，我们也可以用  <code>tag</code>  来表征这一特点：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\">!Person</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'linn'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">gender</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'male'</span></pre></td></tr></table></figure><p>在  <code>YAML</code>  中，使用  <code>!</code>  来表示这一标识是一个  <code>tag</code>  的名称。相比于仅仅列出属性，增加一个  <code>tag</code>  可以使得数据的语义更加明晰。当我们的配置文件中的数据项膨胀到数十个的时候，增加一个  <code>tag</code>  能够帮助你更好的理解配置选项的意义。</p>\n<h2 id=\"解析-yaml-的-tag\"><a class=\"markdownIt-Anchor\" href=\"#解析-yaml-的-tag\">#</a> 解析  <code>YAML</code>  的  <code>tag</code></h2>\n<p>当然，光在  <code>YAML</code>  中定义一个  <code>tag</code> ，并没有全部发挥出  <code>tag</code>  的作用。 <code>tag</code>  黑能配合编程语言，帮助解析  <code>YAML</code>  文件中的内容。</p>\n<p>想象一下，当没有  <code>tag</code>  的时候，我们通常是如何解析  <code>YAML</code>  的？一般情况的代码大致如下（为了方便，直接在文件中用字符串表示  <code>YAML</code>  内容）：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> yaml</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> gender</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>yaml_str <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>name: 'linn'</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>age: 18</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>gender: 'male'</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\"\"\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>content <span class=\"token operator\">=</span> yaml<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>yaml_str<span class=\"token punctuation\">,</span> Loader<span class=\"token operator\">=</span>yaml<span class=\"token punctuation\">.</span>SafeLoader<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>content</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>&#123;'name': 'linn', 'age': 18, 'gender': 'male'&#125;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\"\"\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>person <span class=\"token operator\">=</span> Person<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>content<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>以上代码可以分为两个部分：</p>\n<ol>\n<li>读取  <code>YAML</code>  文件的内容，赋值给某个对象。一般而言，读入的内容会存储在字典或者列表中；</li>\n<li>创建某个类的对象，利用读取的  <code>YAML</code>  内容为其初始化。<br>\n对于结构简单的  <code>YAML</code>  文件，上述方法还可接受，但是如果  <code>YAML</code>  文件变得复杂，那么按照上述方法来解析的代码便会变得繁琐。</li>\n</ol>\n<p>我们可以看下面这个例子<sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>name<span class=\"token punctuation\">:</span> MyBusiness</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>locations<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token operator\">-</span> <span class=\"token string\">\"Hawaii\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token operator\">-</span> <span class=\"token string\">\"India\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token operator\">-</span> <span class=\"token string\">\"Japan\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>employees<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token operator\">-</span> !Employee</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    name<span class=\"token punctuation\">:</span> Matthew Burruss</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token operator\">-</span> !Employee</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    name<span class=\"token punctuation\">:</span> John Doe</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></pre></td></tr></table></figure><p>显然，如果  <code>employees</code>  中的内容较多，我们甚至还需要写一个循环来初始化这些对象。而通过结合  <code>YAML</code>  的  <code>tag</code> ，我们可以自定义  <code>constructor</code>  来解析其内容：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> yaml</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token triple-quoted-string string\">\"\"\"Employee class.\"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    self<span class=\"token punctuation\">.</span>_name<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_id <span class=\"token operator\">=</span> name<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">employee_constructor</span><span class=\"token punctuation\">(</span>loader<span class=\"token punctuation\">:</span> yaml<span class=\"token punctuation\">.</span>SafeLoader<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">:</span> yaml<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">.</span>MappingNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Employee<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token triple-quoted-string string\">\"\"\"Construct an employee.\"\"\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">return</span> Employee<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>loader<span class=\"token punctuation\">.</span>construct_mapping<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_loader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token triple-quoted-string string\">\"\"\"Add constructors to PyYAML loader.\"\"\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  loader <span class=\"token operator\">=</span> yaml<span class=\"token punctuation\">.</span>SafeLoader</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  loader<span class=\"token punctuation\">.</span>add_constructor<span class=\"token punctuation\">(</span><span class=\"token string\">\"!Employee\"</span><span class=\"token punctuation\">,</span> employee_constructor<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">return</span> loader</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>yaml<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"config.yml\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Loader<span class=\"token operator\">=</span>get_loader<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>&#123;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  'name': 'MyBusiness',</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  'locations': ['Hawaii', 'India', 'Japan'],</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  'employees': [</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    &lt;__main__.Employee object at 0x7f0ea2694d10>,</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    &lt;__main__.Employee object at 0x7f0ea2694d90></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  ]</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\"\"\"</span></pre></td></tr></table></figure><p>这样一来，我们可以直接生成对应的类的对象，省去了自己创建的过程。</p>\n<h2 id=\"dataclass\"><a class=\"markdownIt-Anchor\" href=\"#dataclass\">#</a>  <code>dataclass</code></h2>\n<p>你是否经常面临下面的情形：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        self<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> gender</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p>当我们在  <code>__init__</code>  函数的参数列表中敲击了一系列参数之后，又需要在  <code>__init__</code>  函数体中，将它们一一赋值给类成员变量。一旦这些变量数量增多，这项工作就成了一项非常繁琐无趣的事情。</p>\n<p>很多时候，我们定义类只是想将一些相关的数据组织起来，但却不得不动手编写许多重复的代码。于是乎，这里就轮到  <code>dataclass</code>  出场了。类比而言， <code>dataclass</code>  可以看成是  <code>C/C++</code>  中的结构体，能够方便我们将一系列的数据组合在一起，同时给每个成员指定默认值，不用再手动为成员变量赋值。</p>\n<p>可以看下面这个例子<sup class=\"footnote-ref\"><a href=\"#fn4\" id=\"fnref4\">[4]</a></sup>：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token decorator annotation punctuation\">@dataclass</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Lang</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token triple-quoted-string string\">\"\"\"a dataclass that describes a programming language\"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tname<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">'python'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tstrong_type<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tstatic_type<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">28</span></pre></td></tr></table></figure><p>这里定义了一个编程语言的类  <code>Lang</code> ，我们从  <code>dataclasses</code>  模块中引入了装饰器  <code>dataclass</code> 。之后，我们在类中定义了一系列成员变量。</p>\n<p>使用上述方式定义之后，该类会自动生成一个初始化构造函数：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token operator\">=</span><span class=\"token string\">'python'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            strong_type<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span><span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            static_type<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span><span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            age<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token operator\">=</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    self<span class=\"token punctuation\">.</span>strong_type <span class=\"token operator\">=</span> strong_type</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    self<span class=\"token punctuation\">.</span>static_type <span class=\"token operator\">=</span> static_type</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    self<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age</pre></td></tr></table></figure><p>除此之外， <code>__repr__</code>  和  <code>__eq__</code>  函数也会自动生成，便于打印和比较。通过以上方式，再也不用每次都自己定义一个构造函数，并且为每个变量都赋值一遍，省却了繁琐的操作。</p>\n<p>执行效果如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Lang<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Lang<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'python'</span><span class=\"token punctuation\">,</span> strong_type<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> static_type<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Lang<span class=\"token punctuation\">(</span><span class=\"token string\">'js'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Lang<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'js'</span><span class=\"token punctuation\">,</span> strong_type<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> static_type<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Lang<span class=\"token punctuation\">(</span><span class=\"token string\">'js'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Lang<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Lang<span class=\"token punctuation\">(</span><span class=\"token string\">'python'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Lang<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token boolean\">True</span></pre></td></tr></table></figure><p>除此之外， <code>dataclass</code>  可以通过  <code>asdict</code>  或者  <code>astuple</code>  生成类成员的字典或者元组。</p>\n<p>需要注意的是，对于  <code>mutable</code>  类型的变量，如  <code>list</code> 、 <code>map</code>  等，推荐使用  <code>field</code>  来初始化：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass<span class=\"token punctuation\">,</span> field</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token decorator annotation punctuation\">@dataclass</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">C</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    mylist<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> field<span class=\"token punctuation\">(</span>default_factory<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其他功能的详细介绍，可以参考<a href=\"https://www.cnblogs.com/apocelipes/p/10284346.html\">这篇博客</a>或者<a href=\"https://peps.python.org/pep-0557/\">官方网站</a>的说明。</p>\n<h2 id=\"结合-dataclass-和-yaml\"><a class=\"markdownIt-Anchor\" href=\"#结合-dataclass-和-yaml\">#</a> 结合  <code>dataclass</code>  和  <code>YAML</code></h2>\n<p>在介绍以上两部分内容之后，我们可以结合  <code>dataclass</code>  和  <code>YAML</code>  来方便地构建配置类，并从  <code>YAML</code>  文件导入，或者导出到  <code>YAML</code>  文件。</p>\n<p>参考了相关资料后<sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3:1\">[3:1]</a></sup><sup class=\"footnote-ref\"><a href=\"#fn5\" id=\"fnref5\">[5]</a></sup>，我编写了下面的参数类模板。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> yaml</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> yaml <span class=\"token keyword\">import</span> SafeLoader<span class=\"token punctuation\">,</span> SafeDumper</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> yaml<span class=\"token punctuation\">.</span>nodes <span class=\"token keyword\">import</span> MappingNode</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass<span class=\"token punctuation\">,</span> asdict<span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">,</span> is_dataclass</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Type</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> typing_extensions <span class=\"token keyword\">import</span> Self</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token decorator annotation punctuation\">@dataclass</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseConfig</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@classmethod</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> loader<span class=\"token punctuation\">:</span> SafeLoader<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">:</span> MappingNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Self<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"Construct an instance.\"\"\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> cls<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>loader<span class=\"token punctuation\">.</span>construct_mapping<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@classmethod</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">loader</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> safe_loader<span class=\"token punctuation\">:</span> SafeLoader<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Type<span class=\"token punctuation\">[</span>SafeLoader<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"Add constructors to PyYAML loader.\"\"\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        safe_loader <span class=\"token operator\">=</span> yaml<span class=\"token punctuation\">.</span>SafeLoader</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        safe_loader<span class=\"token punctuation\">.</span>add_constructor<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"!</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>cls<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> cls<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> data_fields<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> cls<span class=\"token punctuation\">.</span>__dataclass_fields__<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            cls_type <span class=\"token operator\">=</span> data_fields<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">if</span> is_dataclass<span class=\"token punctuation\">(</span>cls_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                safe_loader<span class=\"token punctuation\">.</span>add_constructor<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"!</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>cls_type<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> cls_type<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                safe_loader <span class=\"token operator\">=</span> cls_type<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">(</span>SafeLoader<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span> safe_loader</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@classmethod</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">representer</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> dumper<span class=\"token punctuation\">:</span> SafeDumper<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> MappingNode<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"Represent an instance as a YAML mapping node.\"\"\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> dumper<span class=\"token punctuation\">.</span>represent_mapping<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"!</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>cls<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>__dict__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@classmethod</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">dumper</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> safe_dumper<span class=\"token punctuation\">:</span> SafeDumper<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Type<span class=\"token punctuation\">[</span>SafeDumper<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"Add representers to a YAML seriailizer.\"\"\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\"># safe_dumper = yaml.SafeDumper</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        safe_dumper<span class=\"token punctuation\">.</span>add_representer<span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> cls<span class=\"token punctuation\">.</span>representer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> data_fields<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> cls<span class=\"token punctuation\">.</span>__dataclass_fields__<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            cls_type <span class=\"token operator\">=</span> data_fields<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">if</span> is_dataclass<span class=\"token punctuation\">(</span>cls_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                safe_dumper<span class=\"token punctuation\">.</span>add_representer<span class=\"token punctuation\">(</span>cls_type<span class=\"token punctuation\">,</span> cls_type<span class=\"token punctuation\">.</span>representer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                safe_dumper <span class=\"token operator\">=</span> cls_type<span class=\"token punctuation\">.</span>dumper<span class=\"token punctuation\">(</span>safe_dumper<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">return</span> safe_dumper</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token decorator annotation punctuation\">@dataclass</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"toke